{"mappings":"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","sources":["../../../../../C:/Users/GaboPC/AppData/Roaming/npm/node_modules/parcel/node_modules/@parcel/runtime-browser-hmr/lib/runtime-b5ab8892d8f1c2ea.js","src/js/render4.js","node_modules/three/examples/jsm/loaders/FBXLoader.js","node_modules/three/examples/jsm/libs/fflate.module.js","node_modules/three/examples/jsm/curves/NURBSCurve.js","node_modules/three/examples/jsm/curves/NURBSUtils.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"a2a83724566c2d4a\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n\n  // Web extension context\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import * as THREE from 'three';\r\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader';\r\n\r\nclass BasicCharacterControllerProxy {\r\n  constructor(animations) {\r\n    this._animations = animations;\r\n  }\r\n\r\n  get animations() {\r\n    return this._animations;\r\n  }\r\n}\r\n\r\nclass BasicCharacterController {\r\n  constructor(params) {\r\n    this._Init(params);\r\n  }\r\n\r\n  _Init(params) {\r\n    this._params = params;\r\n    this._decceleration = new THREE.Vector3(-0.0005, -0.0001, -5.0);\r\n    this._acceleration = new THREE.Vector3(1, 0.25, 50.0);\r\n    this._velocity = new THREE.Vector3(0, 0, 0);\r\n    this._position = new THREE.Vector3();\r\n\r\n    this._animations = {};\r\n    this._input = new BasicCharacterControllerInput();\r\n    this._stateMachine = new CharacterFSM(\r\n      new BasicCharacterControllerProxy(this._animations)\r\n    );\r\n\r\n    this._LoadModels();\r\n  }\r\n\r\n  _LoadModels() {\r\n    const loader = new FBXLoader();\r\n    loader.setPath('./assets/zombie/');\r\n    loader.load('mremireh_o_desbiens.fbx', fbx => {\r\n      fbx.scale.setScalar(0.1);\r\n      fbx.traverse(c => {\r\n        c.castShadow = true;\r\n      });\r\n\r\n      this._target = fbx;\r\n      this._params.scene.add(this._target);\r\n\r\n      this._mixer = new THREE.AnimationMixer(this._target);\r\n\r\n      this._manager = new THREE.LoadingManager();\r\n      this._manager.onLoad = () => {\r\n        this._stateMachine.SetState('idle');\r\n      };\r\n\r\n      const _OnLoad = (animName, anim) => {\r\n        const clip = anim.animations[0];\r\n        const action = this._mixer.clipAction(clip);\r\n\r\n        this._animations[animName] = {\r\n          clip: clip,\r\n          action: action,\r\n        };\r\n      };\r\n\r\n      const loader = new FBXLoader(this._manager);\r\n      loader.setPath('./assets/zombie/');\r\n      loader.load('walk.fbx', a => {\r\n        _OnLoad('walk', a);\r\n      });\r\n      loader.load('run.fbx', a => {\r\n        _OnLoad('run', a);\r\n      });\r\n      loader.load('idle.fbx', a => {\r\n        _OnLoad('idle', a);\r\n      });\r\n      loader.load('dance.fbx', a => {\r\n        _OnLoad('dance', a);\r\n      });\r\n    });\r\n  }\r\n\r\n  get Position() {\r\n    return this._position;\r\n  }\r\n\r\n  get Rotation() {\r\n    if (!this._target) {\r\n      return new THREE.Quaternion();\r\n    }\r\n    return this._target.quaternion;\r\n  }\r\n\r\n  Update(timeInSeconds) {\r\n    if (!this._stateMachine._currentState) {\r\n      return;\r\n    }\r\n\r\n    this._stateMachine.Update(timeInSeconds, this._input);\r\n\r\n    const velocity = this._velocity;\r\n    const frameDecceleration = new THREE.Vector3(\r\n      velocity.x * this._decceleration.x,\r\n      velocity.y * this._decceleration.y,\r\n      velocity.z * this._decceleration.z\r\n    );\r\n    frameDecceleration.multiplyScalar(timeInSeconds);\r\n    frameDecceleration.z =\r\n      Math.sign(frameDecceleration.z) *\r\n      Math.min(Math.abs(frameDecceleration.z), Math.abs(velocity.z));\r\n\r\n    velocity.add(frameDecceleration);\r\n\r\n    const controlObject = this._target;\r\n    const _Q = new THREE.Quaternion();\r\n    const _A = new THREE.Vector3();\r\n    const _R = controlObject.quaternion.clone();\r\n\r\n    const acc = this._acceleration.clone();\r\n    if (this._input._keys.shift) {\r\n      acc.multiplyScalar(2.0);\r\n    }\r\n\r\n    if (this._stateMachine._currentState.Name == 'dance') {\r\n      acc.multiplyScalar(0.0);\r\n    }\r\n\r\n    if (this._input._keys.forward) {\r\n      velocity.z += acc.z * timeInSeconds;\r\n    }\r\n    if (this._input._keys.backward) {\r\n      velocity.z -= acc.z * timeInSeconds;\r\n    }\r\n    if (this._input._keys.left) {\r\n      _A.set(0, 1, 0);\r\n      _Q.setFromAxisAngle(\r\n        _A,\r\n        4.0 * Math.PI * timeInSeconds * this._acceleration.y\r\n      );\r\n      _R.multiply(_Q);\r\n    }\r\n    if (this._input._keys.right) {\r\n      _A.set(0, 1, 0);\r\n      _Q.setFromAxisAngle(\r\n        _A,\r\n        4.0 * -Math.PI * timeInSeconds * this._acceleration.y\r\n      );\r\n      _R.multiply(_Q);\r\n    }\r\n\r\n    controlObject.quaternion.copy(_R);\r\n\r\n    const oldPosition = new THREE.Vector3();\r\n    oldPosition.copy(controlObject.position);\r\n\r\n    const forward = new THREE.Vector3(0, 0, 1);\r\n    forward.applyQuaternion(controlObject.quaternion);\r\n    forward.normalize();\r\n\r\n    const sideways = new THREE.Vector3(1, 0, 0);\r\n    sideways.applyQuaternion(controlObject.quaternion);\r\n    sideways.normalize();\r\n\r\n    sideways.multiplyScalar(velocity.x * timeInSeconds);\r\n    forward.multiplyScalar(velocity.z * timeInSeconds);\r\n\r\n    controlObject.position.add(forward);\r\n    controlObject.position.add(sideways);\r\n\r\n    this._position.copy(controlObject.position);\r\n\r\n    if (this._mixer) {\r\n      this._mixer.update(timeInSeconds);\r\n    }\r\n  }\r\n}\r\n\r\nclass BasicCharacterControllerInput {\r\n  constructor() {\r\n    this._Init();\r\n  }\r\n\r\n  _Init() {\r\n    this._keys = {\r\n      forward: false,\r\n      backward: false,\r\n      left: false,\r\n      right: false,\r\n      space: false,\r\n      shift: false,\r\n    };\r\n    document.addEventListener('keydown', e => this._onKeyDown(e), false);\r\n    document.addEventListener('keyup', e => this._onKeyUp(e), false);\r\n  }\r\n\r\n  _onKeyDown(event) {\r\n    switch (event.keyCode) {\r\n      case 87: // w\r\n        this._keys.forward = true;\r\n        break;\r\n      case 65: // a\r\n        this._keys.left = true;\r\n        break;\r\n      case 83: // s\r\n        this._keys.backward = true;\r\n        break;\r\n      case 68: // d\r\n        this._keys.right = true;\r\n        break;\r\n      case 32: // SPACE\r\n        this._keys.space = true;\r\n        break;\r\n      case 16: // SHIFT\r\n        this._keys.shift = true;\r\n        break;\r\n    }\r\n  }\r\n\r\n  _onKeyUp(event) {\r\n    switch (event.keyCode) {\r\n      case 87: // w\r\n        this._keys.forward = false;\r\n        break;\r\n      case 65: // a\r\n        this._keys.left = false;\r\n        break;\r\n      case 83: // s\r\n        this._keys.backward = false;\r\n        break;\r\n      case 68: // d\r\n        this._keys.right = false;\r\n        break;\r\n      case 32: // SPACE\r\n        this._keys.space = false;\r\n        break;\r\n      case 16: // SHIFT\r\n        this._keys.shift = false;\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nclass FiniteStateMachine {\r\n  constructor() {\r\n    this._states = {};\r\n    this._currentState = null;\r\n  }\r\n\r\n  _AddState(name, type) {\r\n    this._states[name] = type;\r\n  }\r\n\r\n  SetState(name) {\r\n    const prevState = this._currentState;\r\n\r\n    if (prevState) {\r\n      if (prevState.Name == name) {\r\n        return;\r\n      }\r\n      prevState.Exit();\r\n    }\r\n\r\n    const state = new this._states[name](this);\r\n\r\n    this._currentState = state;\r\n    state.Enter(prevState);\r\n  }\r\n\r\n  Update(timeElapsed, input) {\r\n    if (this._currentState) {\r\n      this._currentState.Update(timeElapsed, input);\r\n    }\r\n  }\r\n}\r\n\r\nclass CharacterFSM extends FiniteStateMachine {\r\n  constructor(proxy) {\r\n    super();\r\n    this._proxy = proxy;\r\n    this._Init();\r\n  }\r\n\r\n  _Init() {\r\n    this._AddState('idle', IdleState);\r\n    this._AddState('walk', WalkState);\r\n    this._AddState('run', RunState);\r\n    this._AddState('dance', DanceState);\r\n  }\r\n}\r\n\r\nclass State {\r\n  constructor(parent) {\r\n    this._parent = parent;\r\n  }\r\n\r\n  Enter() {}\r\n  Exit() {}\r\n  Update() {}\r\n}\r\n\r\nclass DanceState extends State {\r\n  constructor(parent) {\r\n    super(parent);\r\n\r\n    this._FinishedCallback = () => {\r\n      this._Finished();\r\n    };\r\n  }\r\n\r\n  get Name() {\r\n    return 'dance';\r\n  }\r\n\r\n  Enter(prevState) {\r\n    const curAction = this._parent._proxy._animations['dance'].action;\r\n    const mixer = curAction.getMixer();\r\n    mixer.addEventListener('finished', this._FinishedCallback);\r\n\r\n    if (prevState) {\r\n      const prevAction = this._parent._proxy._animations[prevState.Name].action;\r\n\r\n      curAction.reset();\r\n      curAction.setLoop(THREE.LoopOnce, 1);\r\n      curAction.clampWhenFinished = true;\r\n      curAction.crossFadeFrom(prevAction, 0.2, true);\r\n      curAction.play();\r\n    } else {\r\n      curAction.play();\r\n    }\r\n  }\r\n\r\n  _Finished() {\r\n    this._Cleanup();\r\n    this._parent.SetState('idle');\r\n  }\r\n\r\n  _Cleanup() {\r\n    const action = this._parent._proxy._animations['dance'].action;\r\n\r\n    action.getMixer().removeEventListener('finished', this._CleanupCallback);\r\n  }\r\n\r\n  Exit() {\r\n    this._Cleanup();\r\n  }\r\n\r\n  Update(_) {}\r\n}\r\n\r\nclass WalkState extends State {\r\n  constructor(parent) {\r\n    super(parent);\r\n  }\r\n\r\n  get Name() {\r\n    return 'walk';\r\n  }\r\n\r\n  Enter(prevState) {\r\n    const curAction = this._parent._proxy._animations['walk'].action;\r\n    if (prevState) {\r\n      const prevAction = this._parent._proxy._animations[prevState.Name].action;\r\n\r\n      curAction.enabled = true;\r\n\r\n      if (prevState.Name == 'run') {\r\n        const ratio =\r\n          curAction.getClip().duration / prevAction.getClip().duration;\r\n        curAction.time = prevAction.time * ratio;\r\n      } else {\r\n        curAction.time = 0.0;\r\n        curAction.setEffectiveTimeScale(1.0);\r\n        curAction.setEffectiveWeight(1.0);\r\n      }\r\n\r\n      curAction.crossFadeFrom(prevAction, 0.5, true);\r\n      curAction.play();\r\n    } else {\r\n      curAction.play();\r\n    }\r\n  }\r\n\r\n  Exit() {}\r\n\r\n  Update(timeElapsed, input) {\r\n    if (input._keys.forward || input._keys.backward) {\r\n      if (input._keys.shift) {\r\n        this._parent.SetState('run');\r\n      }\r\n      return;\r\n    }\r\n\r\n    this._parent.SetState('idle');\r\n  }\r\n}\r\n\r\nclass RunState extends State {\r\n  constructor(parent) {\r\n    super(parent);\r\n  }\r\n\r\n  get Name() {\r\n    return 'run';\r\n  }\r\n\r\n  Enter(prevState) {\r\n    const curAction = this._parent._proxy._animations['run'].action;\r\n    if (prevState) {\r\n      const prevAction = this._parent._proxy._animations[prevState.Name].action;\r\n\r\n      curAction.enabled = true;\r\n\r\n      if (prevState.Name == 'walk') {\r\n        const ratio =\r\n          curAction.getClip().duration / prevAction.getClip().duration;\r\n        curAction.time = prevAction.time * ratio;\r\n      } else {\r\n        curAction.time = 0.0;\r\n        curAction.setEffectiveTimeScale(1.0);\r\n        curAction.setEffectiveWeight(1.0);\r\n      }\r\n\r\n      curAction.crossFadeFrom(prevAction, 0.5, true);\r\n      curAction.play();\r\n    } else {\r\n      curAction.play();\r\n    }\r\n  }\r\n\r\n  Exit() {}\r\n\r\n  Update(timeElapsed, input) {\r\n    if (input._keys.forward || input._keys.backward) {\r\n      if (!input._keys.shift) {\r\n        this._parent.SetState('walk');\r\n      }\r\n      return;\r\n    }\r\n\r\n    this._parent.SetState('idle');\r\n  }\r\n}\r\n\r\nclass IdleState extends State {\r\n  constructor(parent) {\r\n    super(parent);\r\n  }\r\n\r\n  get Name() {\r\n    return 'idle';\r\n  }\r\n\r\n  Enter(prevState) {\r\n    const idleAction = this._parent._proxy._animations['idle'].action;\r\n    if (prevState) {\r\n      const prevAction = this._parent._proxy._animations[prevState.Name].action;\r\n      idleAction.time = 0.0;\r\n      idleAction.enabled = true;\r\n      idleAction.setEffectiveTimeScale(1.0);\r\n      idleAction.setEffectiveWeight(1.0);\r\n      idleAction.crossFadeFrom(prevAction, 0.5, true);\r\n      idleAction.play();\r\n    } else {\r\n      idleAction.play();\r\n    }\r\n  }\r\n\r\n  Exit() {}\r\n\r\n  Update(_, input) {\r\n    if (input._keys.forward || input._keys.backward) {\r\n      this._parent.SetState('walk');\r\n    } else if (input._keys.space) {\r\n      this._parent.SetState('dance');\r\n    }\r\n  }\r\n}\r\n\r\nclass ThirdPersonCamera {\r\n  constructor(params) {\r\n    this._params = params;\r\n    this._camera = params.camera;\r\n\r\n    this._currentPosition = new THREE.Vector3();\r\n    this._currentLookat = new THREE.Vector3();\r\n  }\r\n\r\n  _CalculateIdealOffset() {\r\n    const idealOffset = new THREE.Vector3(-15, 20, -30);\r\n    idealOffset.applyQuaternion(this._params.target.Rotation);\r\n    idealOffset.add(this._params.target.Position);\r\n    return idealOffset;\r\n  }\r\n\r\n  _CalculateIdealLookat() {\r\n    const idealLookat = new THREE.Vector3(0, 10, 50);\r\n    idealLookat.applyQuaternion(this._params.target.Rotation);\r\n    idealLookat.add(this._params.target.Position);\r\n    return idealLookat;\r\n  }\r\n\r\n  Update(timeElapsed) {\r\n    const idealOffset = this._CalculateIdealOffset();\r\n    const idealLookat = this._CalculateIdealLookat();\r\n\r\n    // const t = 0.05;\r\n    // const t = 4.0 * timeElapsed;\r\n    const t = 1.0 - Math.pow(0.001, timeElapsed);\r\n\r\n    this._currentPosition.lerp(idealOffset, t);\r\n    this._currentLookat.lerp(idealLookat, t);\r\n\r\n    this._camera.position.copy(this._currentPosition);\r\n    this._camera.lookAt(this._currentLookat);\r\n  }\r\n}\r\n\r\nclass ThirdPersonCameraDemo {\r\n  constructor() {\r\n    this._Initialize();\r\n  }\r\n\r\n  _Initialize() {\r\n    this._threejs = new THREE.WebGLRenderer({\r\n      antialias: true,\r\n    });\r\n    this._threejs.outputEncoding = THREE.sRGBEncoding;\r\n    this._threejs.shadowMap.enabled = true;\r\n    this._threejs.shadowMap.type = THREE.PCFSoftShadowMap;\r\n    this._threejs.setPixelRatio(window.devicePixelRatio);\r\n    this._threejs.setSize(window.innerWidth, window.innerHeight);\r\n\r\n    document.body.appendChild(this._threejs.domElement);\r\n\r\n    window.addEventListener(\r\n      'resize',\r\n      () => {\r\n        this._OnWindowResize();\r\n      },\r\n      false\r\n    );\r\n\r\n    const fov = 60;\r\n    const aspect = 1920 / 1080;\r\n    const near = 1.0;\r\n    const far = 1000.0;\r\n    this._camera = new THREE.PerspectiveCamera(fov, aspect, near, far);\r\n    this._camera.position.set(25, 10, 25);\r\n\r\n    this._scene = new THREE.Scene();\r\n\r\n    let light = new THREE.DirectionalLight(0xffffff, 1.0);\r\n    light.position.set(-100, 100, 100);\r\n    light.target.position.set(0, 0, 0);\r\n    light.castShadow = true;\r\n    light.shadow.bias = -0.001;\r\n    light.shadow.mapSize.width = 4096;\r\n    light.shadow.mapSize.height = 4096;\r\n    light.shadow.camera.near = 0.1;\r\n    light.shadow.camera.far = 500.0;\r\n    light.shadow.camera.near = 0.5;\r\n    light.shadow.camera.far = 500.0;\r\n    light.shadow.camera.left = 50;\r\n    light.shadow.camera.right = -50;\r\n    light.shadow.camera.top = 50;\r\n    light.shadow.camera.bottom = -50;\r\n    this._scene.add(light);\r\n\r\n    light = new THREE.AmbientLight(0xffffff, 0.25);\r\n    this._scene.add(light);\r\n\r\n    const loader = new THREE.CubeTextureLoader();\r\n    const texture = loader.load([\r\n      './img/posx.jpg',\r\n      './img/negx.jpg',\r\n      './img/posy.jpg',\r\n      './img/negy.jpg',\r\n      './img/posz.jpg',\r\n      './img/negz.jpg',\r\n    ]);\r\n    texture.encoding = THREE.sRGBEncoding;\r\n    this._scene.background = texture;\r\n\r\n    const plane = new THREE.Mesh(\r\n      new THREE.PlaneGeometry(100, 100, 10, 10),\r\n      new THREE.MeshStandardMaterial({\r\n        color: 0x808080,\r\n      })\r\n    );\r\n    plane.castShadow = false;\r\n    plane.receiveShadow = true;\r\n    plane.rotation.x = -Math.PI / 2;\r\n    this._scene.add(plane);\r\n\r\n    this._mixers = [];\r\n    this._previousRAF = null;\r\n\r\n    this._LoadAnimatedModel();\r\n    this._RAF();\r\n  }\r\n\r\n  _LoadAnimatedModel() {\r\n    const params = {\r\n      camera: this._camera,\r\n      scene: this._scene,\r\n    };\r\n    this._controls = new BasicCharacterController(params);\r\n\r\n    this._thirdPersonCamera = new ThirdPersonCamera({\r\n      camera: this._camera,\r\n      target: this._controls,\r\n    });\r\n  }\r\n\r\n  _OnWindowResize() {\r\n    this._camera.aspect = window.innerWidth / window.innerHeight;\r\n    this._camera.updateProjectionMatrix();\r\n    this._threejs.setSize(window.innerWidth, window.innerHeight);\r\n  }\r\n\r\n  _RAF() {\r\n    requestAnimationFrame(t => {\r\n      if (this._previousRAF === null) {\r\n        this._previousRAF = t;\r\n      }\r\n\r\n      this._RAF();\r\n\r\n      this._threejs.render(this._scene, this._camera);\r\n      this._Step(t - this._previousRAF);\r\n      this._previousRAF = t;\r\n    });\r\n  }\r\n\r\n  _Step(timeElapsed) {\r\n    const timeElapsedS = timeElapsed * 0.001;\r\n    if (this._mixers) {\r\n      this._mixers.map(m => m.update(timeElapsedS));\r\n    }\r\n\r\n    if (this._controls) {\r\n      this._controls.Update(timeElapsedS);\r\n    }\r\n\r\n    this._thirdPersonCamera.Update(timeElapsedS);\r\n  }\r\n}\r\n\r\nlet _APP = null;\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n  _APP = new ThirdPersonCameraDemo();\r\n});\r\n\r\nfunction _LerpOverFrames(frames, t) {\r\n  const s = new THREE.Vector3(0, 0, 0);\r\n  const e = new THREE.Vector3(100, 0, 0);\r\n  const c = s.clone();\r\n\r\n  for (let i = 0; i < frames; i++) {\r\n    c.lerp(e, t);\r\n  }\r\n  return c;\r\n}\r\n\r\nfunction _TestLerp(t1, t2) {\r\n  const v1 = _LerpOverFrames(100, t1);\r\n  const v2 = _LerpOverFrames(50, t2);\r\n  console.log(v1.x + ' | ' + v2.x);\r\n}\r\n\r\n_TestLerp(0.01, 0.01);\r\n_TestLerp(1.0 / 100.0, 1.0 / 50.0);\r\n_TestLerp(1.0 - Math.pow(0.3, 1.0 / 100.0), 1.0 - Math.pow(0.3, 1.0 / 50.0));\r\n","import {\n\tAmbientLight,\n\tAnimationClip,\n\tBone,\n\tBufferGeometry,\n\tClampToEdgeWrapping,\n\tColor,\n\tDirectionalLight,\n\tEquirectangularReflectionMapping,\n\tEuler,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLine,\n\tLineBasicMaterial,\n\tLoader,\n\tLoaderUtils,\n\tMathUtils,\n\tMatrix3,\n\tMatrix4,\n\tMesh,\n\tMeshLambertMaterial,\n\tMeshPhongMaterial,\n\tNumberKeyframeTrack,\n\tObject3D,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPointLight,\n\tPropertyBinding,\n\tQuaternion,\n\tQuaternionKeyframeTrack,\n\tRepeatWrapping,\n\tSkeleton,\n\tSkinnedMesh,\n\tSpotLight,\n\tTexture,\n\tTextureLoader,\n\tUint16BufferAttribute,\n\tVector3,\n\tVector4,\n\tVectorKeyframeTrack,\n\tSRGBColorSpace\n} from 'three';\nimport * as fflate from '../libs/fflate.module.js';\nimport { NURBSCurve } from '../curves/NURBSCurve.js';\n\n/**\n * Loader loads FBX file and generates Group representing FBX scene.\n * Requires FBX file to be >= 7.0 and in ASCII or >= 6400 in Binary format\n * Versions lower than this may load but will probably have errors\n *\n * Needs Support:\n *  Morph normals / blend shape normals\n *\n * FBX format references:\n * \thttps://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_index_html (C++ SDK reference)\n *\n * Binary format specification:\n *\thttps://code.blender.org/2013/08/fbx-binary-file-format-specification/\n */\n\n\nlet fbxTree;\nlet connections;\nlet sceneGraph;\n\nclass FBXLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( scope.path === '' ) ? LoaderUtils.extractUrlBase( url ) : scope.path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( buffer, path ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( FBXBuffer, path ) {\n\n\t\tif ( isFbxFormatBinary( FBXBuffer ) ) {\n\n\t\t\tfbxTree = new BinaryParser().parse( FBXBuffer );\n\n\t\t} else {\n\n\t\t\tconst FBXText = convertArrayBufferToString( FBXBuffer );\n\n\t\t\tif ( ! isFbxFormatASCII( FBXText ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown format.' );\n\n\t\t\t}\n\n\t\t\tif ( getFbxVersion( FBXText ) < 7000 ) {\n\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + getFbxVersion( FBXText ) );\n\n\t\t\t}\n\n\t\t\tfbxTree = new TextParser().parse( FBXText );\n\n\t\t}\n\n\t\t// console.log( fbxTree );\n\n\t\tconst textureLoader = new TextureLoader( this.manager ).setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n\t\treturn new FBXTreeParser( textureLoader, this.manager ).parse( fbxTree );\n\n\t}\n\n}\n\n// Parse the FBXTree object returned by the BinaryParser or TextParser and return a Group\nclass FBXTreeParser {\n\n\tconstructor( textureLoader, manager ) {\n\n\t\tthis.textureLoader = textureLoader;\n\t\tthis.manager = manager;\n\n\t}\n\n\tparse() {\n\n\t\tconnections = this.parseConnections();\n\n\t\tconst images = this.parseImages();\n\t\tconst textures = this.parseTextures( images );\n\t\tconst materials = this.parseMaterials( textures );\n\t\tconst deformers = this.parseDeformers();\n\t\tconst geometryMap = new GeometryParser().parse( deformers );\n\n\t\tthis.parseScene( deformers, geometryMap, materials );\n\n\t\treturn sceneGraph;\n\n\t}\n\n\t// Parses FBXTree.Connections which holds parent-child connections between objects (e.g. material -> texture, model->geometry )\n\t// and details the connection type\n\tparseConnections() {\n\n\t\tconst connectionMap = new Map();\n\n\t\tif ( 'Connections' in fbxTree ) {\n\n\t\t\tconst rawConnections = fbxTree.Connections.connections;\n\n\t\t\trawConnections.forEach( function ( rawConnection ) {\n\n\t\t\t\tconst fromID = rawConnection[ 0 ];\n\t\t\t\tconst toID = rawConnection[ 1 ];\n\t\t\t\tconst relationship = rawConnection[ 2 ];\n\n\t\t\t\tif ( ! connectionMap.has( fromID ) ) {\n\n\t\t\t\t\tconnectionMap.set( fromID, {\n\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\tchildren: []\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tconst parentRelationship = { ID: toID, relationship: relationship };\n\t\t\t\tconnectionMap.get( fromID ).parents.push( parentRelationship );\n\n\t\t\t\tif ( ! connectionMap.has( toID ) ) {\n\n\t\t\t\t\tconnectionMap.set( toID, {\n\t\t\t\t\t\tparents: [],\n\t\t\t\t\t\tchildren: []\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t\tconst childRelationship = { ID: fromID, relationship: relationship };\n\t\t\t\tconnectionMap.get( toID ).children.push( childRelationship );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn connectionMap;\n\n\t}\n\n\t// Parse FBXTree.Objects.Video for embedded image data\n\t// These images are connected to textures in FBXTree.Objects.Textures\n\t// via FBXTree.Connections.\n\tparseImages() {\n\n\t\tconst images = {};\n\t\tconst blobs = {};\n\n\t\tif ( 'Video' in fbxTree.Objects ) {\n\n\t\t\tconst videoNodes = fbxTree.Objects.Video;\n\n\t\t\tfor ( const nodeID in videoNodes ) {\n\n\t\t\t\tconst videoNode = videoNodes[ nodeID ];\n\n\t\t\t\tconst id = parseInt( nodeID );\n\n\t\t\t\timages[ id ] = videoNode.RelativeFilename || videoNode.Filename;\n\n\t\t\t\t// raw image data is in videoNode.Content\n\t\t\t\tif ( 'Content' in videoNode ) {\n\n\t\t\t\t\tconst arrayBufferContent = ( videoNode.Content instanceof ArrayBuffer ) && ( videoNode.Content.byteLength > 0 );\n\t\t\t\t\tconst base64Content = ( typeof videoNode.Content === 'string' ) && ( videoNode.Content !== '' );\n\n\t\t\t\t\tif ( arrayBufferContent || base64Content ) {\n\n\t\t\t\t\t\tconst image = this.parseImage( videoNodes[ nodeID ] );\n\n\t\t\t\t\t\tblobs[ videoNode.RelativeFilename || videoNode.Filename ] = image;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( const id in images ) {\n\n\t\t\tconst filename = images[ id ];\n\n\t\t\tif ( blobs[ filename ] !== undefined ) images[ id ] = blobs[ filename ];\n\t\t\telse images[ id ] = images[ id ].split( '\\\\' ).pop();\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\t// Parse embedded image data in FBXTree.Video.Content\n\tparseImage( videoNode ) {\n\n\t\tconst content = videoNode.Content;\n\t\tconst fileName = videoNode.RelativeFilename || videoNode.Filename;\n\t\tconst extension = fileName.slice( fileName.lastIndexOf( '.' ) + 1 ).toLowerCase();\n\n\t\tlet type;\n\n\t\tswitch ( extension ) {\n\n\t\t\tcase 'bmp':\n\n\t\t\t\ttype = 'image/bmp';\n\t\t\t\tbreak;\n\n\t\t\tcase 'jpg':\n\t\t\tcase 'jpeg':\n\n\t\t\t\ttype = 'image/jpeg';\n\t\t\t\tbreak;\n\n\t\t\tcase 'png':\n\n\t\t\t\ttype = 'image/png';\n\t\t\t\tbreak;\n\n\t\t\tcase 'tif':\n\n\t\t\t\ttype = 'image/tiff';\n\t\t\t\tbreak;\n\n\t\t\tcase 'tga':\n\n\t\t\t\tif ( this.manager.getHandler( '.tga' ) === null ) {\n\n\t\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, skipping ', fileName );\n\n\t\t\t\t}\n\n\t\t\t\ttype = 'image/tga';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'FBXLoader: Image type \"' + extension + '\" is not supported.' );\n\t\t\t\treturn;\n\n\t\t}\n\n\t\tif ( typeof content === 'string' ) { // ASCII format\n\n\t\t\treturn 'data:' + type + ';base64,' + content;\n\n\t\t} else { // Binary Format\n\n\t\t\tconst array = new Uint8Array( content );\n\t\t\treturn window.URL.createObjectURL( new Blob( [ array ], { type: type } ) );\n\n\t\t}\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Texture\n\t// These contain details such as UV scaling, cropping, rotation etc and are connected\n\t// to images in FBXTree.Objects.Video\n\tparseTextures( images ) {\n\n\t\tconst textureMap = new Map();\n\n\t\tif ( 'Texture' in fbxTree.Objects ) {\n\n\t\t\tconst textureNodes = fbxTree.Objects.Texture;\n\t\t\tfor ( const nodeID in textureNodes ) {\n\n\t\t\t\tconst texture = this.parseTexture( textureNodes[ nodeID ], images );\n\t\t\t\ttextureMap.set( parseInt( nodeID ), texture );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textureMap;\n\n\t}\n\n\t// Parse individual node in FBXTree.Objects.Texture\n\tparseTexture( textureNode, images ) {\n\n\t\tconst texture = this.loadTexture( textureNode, images );\n\n\t\ttexture.ID = textureNode.id;\n\n\t\ttexture.name = textureNode.attrName;\n\n\t\tconst wrapModeU = textureNode.WrapModeU;\n\t\tconst wrapModeV = textureNode.WrapModeV;\n\n\t\tconst valueU = wrapModeU !== undefined ? wrapModeU.value : 0;\n\t\tconst valueV = wrapModeV !== undefined ? wrapModeV.value : 0;\n\n\t\t// http://download.autodesk.com/us/fbx/SDKdocs/FBX_SDK_Help/files/fbxsdkref/class_k_fbx_texture.html#889640e63e2e681259ea81061b85143a\n\t\t// 0: repeat(default), 1: clamp\n\n\t\ttexture.wrapS = valueU === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\t\ttexture.wrapT = valueV === 0 ? RepeatWrapping : ClampToEdgeWrapping;\n\n\t\tif ( 'Scaling' in textureNode ) {\n\n\t\t\tconst values = textureNode.Scaling.value;\n\n\t\t\ttexture.repeat.x = values[ 0 ];\n\t\t\ttexture.repeat.y = values[ 1 ];\n\n\t\t}\n\n\t\tif ( 'Translation' in textureNode ) {\n\n\t\t\tconst values = textureNode.Translation.value;\n\n\t\t\ttexture.offset.x = values[ 0 ];\n\t\t\ttexture.offset.y = values[ 1 ];\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\t// load a texture specified as a blob or data URI, or via an external URL using TextureLoader\n\tloadTexture( textureNode, images ) {\n\n\t\tlet fileName;\n\n\t\tconst currentPath = this.textureLoader.path;\n\n\t\tconst children = connections.get( textureNode.id ).children;\n\n\t\tif ( children !== undefined && children.length > 0 && images[ children[ 0 ].ID ] !== undefined ) {\n\n\t\t\tfileName = images[ children[ 0 ].ID ];\n\n\t\t\tif ( fileName.indexOf( 'blob:' ) === 0 || fileName.indexOf( 'data:' ) === 0 ) {\n\n\t\t\t\tthis.textureLoader.setPath( undefined );\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet texture;\n\n\t\tconst extension = textureNode.FileName.slice( - 3 ).toLowerCase();\n\n\t\tif ( extension === 'tga' ) {\n\n\t\t\tconst loader = this.manager.getHandler( '.tga' );\n\n\t\t\tif ( loader === null ) {\n\n\t\t\t\tconsole.warn( 'FBXLoader: TGA loader not found, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\t\ttexture = new Texture();\n\n\t\t\t} else {\n\n\t\t\t\tloader.setPath( this.textureLoader.path );\n\t\t\t\ttexture = loader.load( fileName );\n\n\t\t\t}\n\n\t\t} else if ( extension === 'psd' ) {\n\n\t\t\tconsole.warn( 'FBXLoader: PSD textures are not supported, creating placeholder texture for', textureNode.RelativeFilename );\n\t\t\ttexture = new Texture();\n\n\t\t} else {\n\n\t\t\ttexture = this.textureLoader.load( fileName );\n\n\t\t}\n\n\t\tthis.textureLoader.setPath( currentPath );\n\n\t\treturn texture;\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Material\n\tparseMaterials( textureMap ) {\n\n\t\tconst materialMap = new Map();\n\n\t\tif ( 'Material' in fbxTree.Objects ) {\n\n\t\t\tconst materialNodes = fbxTree.Objects.Material;\n\n\t\t\tfor ( const nodeID in materialNodes ) {\n\n\t\t\t\tconst material = this.parseMaterial( materialNodes[ nodeID ], textureMap );\n\n\t\t\t\tif ( material !== null ) materialMap.set( parseInt( nodeID ), material );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materialMap;\n\n\t}\n\n\t// Parse single node in FBXTree.Objects.Material\n\t// Materials are connected to texture maps in FBXTree.Objects.Textures\n\t// FBX format currently only supports Lambert and Phong shading models\n\tparseMaterial( materialNode, textureMap ) {\n\n\t\tconst ID = materialNode.id;\n\t\tconst name = materialNode.attrName;\n\t\tlet type = materialNode.ShadingModel;\n\n\t\t// Case where FBX wraps shading model in property object.\n\t\tif ( typeof type === 'object' ) {\n\n\t\t\ttype = type.value;\n\n\t\t}\n\n\t\t// Ignore unused materials which don't have any connections.\n\t\tif ( ! connections.has( ID ) ) return null;\n\n\t\tconst parameters = this.parseParameters( materialNode, textureMap, ID );\n\n\t\tlet material;\n\n\t\tswitch ( type.toLowerCase() ) {\n\n\t\t\tcase 'phong':\n\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\tbreak;\n\t\t\tcase 'lambert':\n\t\t\t\tmaterial = new MeshLambertMaterial();\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: unknown material type \"%s\". Defaulting to MeshPhongMaterial.', type );\n\t\t\t\tmaterial = new MeshPhongMaterial();\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tmaterial.setValues( parameters );\n\t\tmaterial.name = name;\n\n\t\treturn material;\n\n\t}\n\n\t// Parse FBX material and return parameters suitable for a three.js material\n\t// Also parse the texture map and return any textures associated with the material\n\tparseParameters( materialNode, textureMap, ID ) {\n\n\t\tconst parameters = {};\n\n\t\tif ( materialNode.BumpFactor ) {\n\n\t\t\tparameters.bumpScale = materialNode.BumpFactor.value;\n\n\t\t}\n\n\t\tif ( materialNode.Diffuse ) {\n\n\t\t\tparameters.color = new Color().fromArray( materialNode.Diffuse.value ).convertSRGBToLinear();\n\n\t\t} else if ( materialNode.DiffuseColor && ( materialNode.DiffuseColor.type === 'Color' || materialNode.DiffuseColor.type === 'ColorRGB' ) ) {\n\n\t\t\t// The blender exporter exports diffuse here instead of in materialNode.Diffuse\n\t\t\tparameters.color = new Color().fromArray( materialNode.DiffuseColor.value ).convertSRGBToLinear();\n\n\t\t}\n\n\t\tif ( materialNode.DisplacementFactor ) {\n\n\t\t\tparameters.displacementScale = materialNode.DisplacementFactor.value;\n\n\t\t}\n\n\t\tif ( materialNode.Emissive ) {\n\n\t\t\tparameters.emissive = new Color().fromArray( materialNode.Emissive.value ).convertSRGBToLinear();\n\n\t\t} else if ( materialNode.EmissiveColor && ( materialNode.EmissiveColor.type === 'Color' || materialNode.EmissiveColor.type === 'ColorRGB' ) ) {\n\n\t\t\t// The blender exporter exports emissive color here instead of in materialNode.Emissive\n\t\t\tparameters.emissive = new Color().fromArray( materialNode.EmissiveColor.value ).convertSRGBToLinear();\n\n\t\t}\n\n\t\tif ( materialNode.EmissiveFactor ) {\n\n\t\t\tparameters.emissiveIntensity = parseFloat( materialNode.EmissiveFactor.value );\n\n\t\t}\n\n\t\tif ( materialNode.Opacity ) {\n\n\t\t\tparameters.opacity = parseFloat( materialNode.Opacity.value );\n\n\t\t}\n\n\t\tif ( parameters.opacity < 1.0 ) {\n\n\t\t\tparameters.transparent = true;\n\n\t\t}\n\n\t\tif ( materialNode.ReflectionFactor ) {\n\n\t\t\tparameters.reflectivity = materialNode.ReflectionFactor.value;\n\n\t\t}\n\n\t\tif ( materialNode.Shininess ) {\n\n\t\t\tparameters.shininess = materialNode.Shininess.value;\n\n\t\t}\n\n\t\tif ( materialNode.Specular ) {\n\n\t\t\tparameters.specular = new Color().fromArray( materialNode.Specular.value ).convertSRGBToLinear();\n\n\t\t} else if ( materialNode.SpecularColor && materialNode.SpecularColor.type === 'Color' ) {\n\n\t\t\t// The blender exporter exports specular color here instead of in materialNode.Specular\n\t\t\tparameters.specular = new Color().fromArray( materialNode.SpecularColor.value ).convertSRGBToLinear();\n\n\t\t}\n\n\t\tconst scope = this;\n\t\tconnections.get( ID ).children.forEach( function ( child ) {\n\n\t\t\tconst type = child.relationship;\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 'Bump':\n\t\t\t\t\tparameters.bumpMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Maya|TEX_ao_map':\n\t\t\t\t\tparameters.aoMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DiffuseColor':\n\t\t\t\tcase 'Maya|TEX_color_map':\n\t\t\t\t\tparameters.map = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.map !== undefined ) {\n\n\t\t\t\t\t\tparameters.map.colorSpace = SRGBColorSpace;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DisplacementColor':\n\t\t\t\t\tparameters.displacementMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EmissiveColor':\n\t\t\t\t\tparameters.emissiveMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.emissiveMap !== undefined ) {\n\n\t\t\t\t\t\tparameters.emissiveMap.colorSpace = SRGBColorSpace;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'NormalMap':\n\t\t\t\tcase 'Maya|TEX_normal_map':\n\t\t\t\t\tparameters.normalMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ReflectionColor':\n\t\t\t\t\tparameters.envMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.envMap !== undefined ) {\n\n\t\t\t\t\t\tparameters.envMap.mapping = EquirectangularReflectionMapping;\n\t\t\t\t\t\tparameters.envMap.colorSpace = SRGBColorSpace;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpecularColor':\n\t\t\t\t\tparameters.specularMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tif ( parameters.specularMap !== undefined ) {\n\n\t\t\t\t\t\tparameters.specularMap.colorSpace = SRGBColorSpace;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'TransparentColor':\n\t\t\t\tcase 'TransparencyFactor':\n\t\t\t\t\tparameters.alphaMap = scope.getTexture( textureMap, child.ID );\n\t\t\t\t\tparameters.transparent = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientColor':\n\t\t\t\tcase 'ShininessExponent': // AKA glossiness map\n\t\t\t\tcase 'SpecularFactor': // AKA specularLevel\n\t\t\t\tcase 'VectorDisplacementColor': // NOTE: Seems to be a copy of DisplacementColor\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: %s map is not supported in three.js, skipping texture.', type );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn parameters;\n\n\t}\n\n\t// get a texture from the textureMap for use by a material.\n\tgetTexture( textureMap, id ) {\n\n\t\t// if the texture is a layered texture, just use the first layer and issue a warning\n\t\tif ( 'LayeredTexture' in fbxTree.Objects && id in fbxTree.Objects.LayeredTexture ) {\n\n\t\t\tconsole.warn( 'THREE.FBXLoader: layered textures are not supported in three.js. Discarding all but first layer.' );\n\t\t\tid = connections.get( id ).children[ 0 ].ID;\n\n\t\t}\n\n\t\treturn textureMap.get( id );\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Deformer\n\t// Deformer node can contain skinning or Vertex Cache animation data, however only skinning is supported here\n\t// Generates map of Skeleton-like objects for use later when generating and binding skeletons.\n\tparseDeformers() {\n\n\t\tconst skeletons = {};\n\t\tconst morphTargets = {};\n\n\t\tif ( 'Deformer' in fbxTree.Objects ) {\n\n\t\t\tconst DeformerNodes = fbxTree.Objects.Deformer;\n\n\t\t\tfor ( const nodeID in DeformerNodes ) {\n\n\t\t\t\tconst deformerNode = DeformerNodes[ nodeID ];\n\n\t\t\t\tconst relationships = connections.get( parseInt( nodeID ) );\n\n\t\t\t\tif ( deformerNode.attrType === 'Skin' ) {\n\n\t\t\t\t\tconst skeleton = this.parseSkeleton( relationships, DeformerNodes );\n\t\t\t\t\tskeleton.ID = nodeID;\n\n\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: skeleton attached to more than one geometry is not supported.' );\n\t\t\t\t\tskeleton.geometryID = relationships.parents[ 0 ].ID;\n\n\t\t\t\t\tskeletons[ nodeID ] = skeleton;\n\n\t\t\t\t} else if ( deformerNode.attrType === 'BlendShape' ) {\n\n\t\t\t\t\tconst morphTarget = {\n\t\t\t\t\t\tid: nodeID,\n\t\t\t\t\t};\n\n\t\t\t\t\tmorphTarget.rawTargets = this.parseMorphTargets( relationships, DeformerNodes );\n\t\t\t\t\tmorphTarget.id = nodeID;\n\n\t\t\t\t\tif ( relationships.parents.length > 1 ) console.warn( 'THREE.FBXLoader: morph target attached to more than one geometry is not supported.' );\n\n\t\t\t\t\tmorphTargets[ nodeID ] = morphTarget;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tskeletons: skeletons,\n\t\t\tmorphTargets: morphTargets,\n\n\t\t};\n\n\t}\n\n\t// Parse single nodes in FBXTree.Objects.Deformer\n\t// The top level skeleton node has type 'Skin' and sub nodes have type 'Cluster'\n\t// Each skin node represents a skeleton and each cluster node represents a bone\n\tparseSkeleton( relationships, deformerNodes ) {\n\n\t\tconst rawBones = [];\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tconst boneNode = deformerNodes[ child.ID ];\n\n\t\t\tif ( boneNode.attrType !== 'Cluster' ) return;\n\n\t\t\tconst rawBone = {\n\n\t\t\t\tID: child.ID,\n\t\t\t\tindices: [],\n\t\t\t\tweights: [],\n\t\t\t\ttransformLink: new Matrix4().fromArray( boneNode.TransformLink.a ),\n\t\t\t\t// transform: new Matrix4().fromArray( boneNode.Transform.a ),\n\t\t\t\t// linkMode: boneNode.Mode,\n\n\t\t\t};\n\n\t\t\tif ( 'Indexes' in boneNode ) {\n\n\t\t\t\trawBone.indices = boneNode.Indexes.a;\n\t\t\t\trawBone.weights = boneNode.Weights.a;\n\n\t\t\t}\n\n\t\t\trawBones.push( rawBone );\n\n\t\t} );\n\n\t\treturn {\n\n\t\t\trawBones: rawBones,\n\t\t\tbones: []\n\n\t\t};\n\n\t}\n\n\t// The top level morph deformer node has type \"BlendShape\" and sub nodes have type \"BlendShapeChannel\"\n\tparseMorphTargets( relationships, deformerNodes ) {\n\n\t\tconst rawMorphTargets = [];\n\n\t\tfor ( let i = 0; i < relationships.children.length; i ++ ) {\n\n\t\t\tconst child = relationships.children[ i ];\n\n\t\t\tconst morphTargetNode = deformerNodes[ child.ID ];\n\n\t\t\tconst rawMorphTarget = {\n\n\t\t\t\tname: morphTargetNode.attrName,\n\t\t\t\tinitialWeight: morphTargetNode.DeformPercent,\n\t\t\t\tid: morphTargetNode.id,\n\t\t\t\tfullWeights: morphTargetNode.FullWeights.a\n\n\t\t\t};\n\n\t\t\tif ( morphTargetNode.attrType !== 'BlendShapeChannel' ) return;\n\n\t\t\trawMorphTarget.geoID = connections.get( parseInt( child.ID ) ).children.filter( function ( child ) {\n\n\t\t\t\treturn child.relationship === undefined;\n\n\t\t\t} )[ 0 ].ID;\n\n\t\t\trawMorphTargets.push( rawMorphTarget );\n\n\t\t}\n\n\t\treturn rawMorphTargets;\n\n\t}\n\n\t// create the main Group() to be returned by the loader\n\tparseScene( deformers, geometryMap, materialMap ) {\n\n\t\tsceneGraph = new Group();\n\n\t\tconst modelMap = this.parseModels( deformers.skeletons, geometryMap, materialMap );\n\n\t\tconst modelNodes = fbxTree.Objects.Model;\n\n\t\tconst scope = this;\n\t\tmodelMap.forEach( function ( model ) {\n\n\t\t\tconst modelNode = modelNodes[ model.ID ];\n\t\t\tscope.setLookAtProperties( model, modelNode );\n\n\t\t\tconst parentConnections = connections.get( model.ID ).parents;\n\n\t\t\tparentConnections.forEach( function ( connection ) {\n\n\t\t\t\tconst parent = modelMap.get( connection.ID );\n\t\t\t\tif ( parent !== undefined ) parent.add( model );\n\n\t\t\t} );\n\n\t\t\tif ( model.parent === null ) {\n\n\t\t\t\tsceneGraph.add( model );\n\n\t\t\t}\n\n\n\t\t} );\n\n\t\tthis.bindSkeleton( deformers.skeletons, geometryMap, modelMap );\n\n\t\tthis.createAmbientLight();\n\n\t\tsceneGraph.traverse( function ( node ) {\n\n\t\t\tif ( node.userData.transformData ) {\n\n\t\t\t\tif ( node.parent ) {\n\n\t\t\t\t\tnode.userData.transformData.parentMatrix = node.parent.matrix;\n\t\t\t\t\tnode.userData.transformData.parentMatrixWorld = node.parent.matrixWorld;\n\n\t\t\t\t}\n\n\t\t\t\tconst transform = generateTransform( node.userData.transformData );\n\n\t\t\t\tnode.applyMatrix4( transform );\n\t\t\t\tnode.updateWorldMatrix();\n\n\t\t\t}\n\n\t\t} );\n\n\t\tconst animations = new AnimationParser().parse();\n\n\t\t// if all the models where already combined in a single group, just return that\n\t\tif ( sceneGraph.children.length === 1 && sceneGraph.children[ 0 ].isGroup ) {\n\n\t\t\tsceneGraph.children[ 0 ].animations = animations;\n\t\t\tsceneGraph = sceneGraph.children[ 0 ];\n\n\t\t}\n\n\t\tsceneGraph.animations = animations;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.Model\n\tparseModels( skeletons, geometryMap, materialMap ) {\n\n\t\tconst modelMap = new Map();\n\t\tconst modelNodes = fbxTree.Objects.Model;\n\n\t\tfor ( const nodeID in modelNodes ) {\n\n\t\t\tconst id = parseInt( nodeID );\n\t\t\tconst node = modelNodes[ nodeID ];\n\t\t\tconst relationships = connections.get( id );\n\n\t\t\tlet model = this.buildSkeleton( relationships, skeletons, id, node.attrName );\n\n\t\t\tif ( ! model ) {\n\n\t\t\t\tswitch ( node.attrType ) {\n\n\t\t\t\t\tcase 'Camera':\n\t\t\t\t\t\tmodel = this.createCamera( relationships );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Light':\n\t\t\t\t\t\tmodel = this.createLight( relationships );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Mesh':\n\t\t\t\t\t\tmodel = this.createMesh( relationships, geometryMap, materialMap );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'NurbsCurve':\n\t\t\t\t\t\tmodel = this.createCurve( relationships, geometryMap );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'LimbNode':\n\t\t\t\t\tcase 'Root':\n\t\t\t\t\t\tmodel = new Bone();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Null':\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmodel = new Group();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tmodel.name = node.attrName ? PropertyBinding.sanitizeNodeName( node.attrName ) : '';\n\n\t\t\t\tmodel.ID = id;\n\n\t\t\t}\n\n\t\t\tthis.getTransformData( model, node );\n\t\t\tmodelMap.set( id, model );\n\n\t\t}\n\n\t\treturn modelMap;\n\n\t}\n\n\tbuildSkeleton( relationships, skeletons, id, name ) {\n\n\t\tlet bone = null;\n\n\t\trelationships.parents.forEach( function ( parent ) {\n\n\t\t\tfor ( const ID in skeletons ) {\n\n\t\t\t\tconst skeleton = skeletons[ ID ];\n\n\t\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t\tif ( rawBone.ID === parent.ID ) {\n\n\t\t\t\t\t\tconst subBone = bone;\n\t\t\t\t\t\tbone = new Bone();\n\n\t\t\t\t\t\tbone.matrixWorld.copy( rawBone.transformLink );\n\n\t\t\t\t\t\t// set name and id here - otherwise in cases where \"subBone\" is created it will not have a name / id\n\n\t\t\t\t\t\tbone.name = name ? PropertyBinding.sanitizeNodeName( name ) : '';\n\t\t\t\t\t\tbone.ID = id;\n\n\t\t\t\t\t\tskeleton.bones[ i ] = bone;\n\n\t\t\t\t\t\t// In cases where a bone is shared between multiple meshes\n\t\t\t\t\t\t// duplicate the bone here and and it as a child of the first bone\n\t\t\t\t\t\tif ( subBone !== null ) {\n\n\t\t\t\t\t\t\tbone.add( subBone );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn bone;\n\n\t}\n\n\t// create a PerspectiveCamera or OrthographicCamera\n\tcreateCamera( relationships ) {\n\n\t\tlet model;\n\t\tlet cameraAttribute;\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tconst attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\tcameraAttribute = attr;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( cameraAttribute === undefined ) {\n\n\t\t\tmodel = new Object3D();\n\n\t\t} else {\n\n\t\t\tlet type = 0;\n\t\t\tif ( cameraAttribute.CameraProjectionType !== undefined && cameraAttribute.CameraProjectionType.value === 1 ) {\n\n\t\t\t\ttype = 1;\n\n\t\t\t}\n\n\t\t\tlet nearClippingPlane = 1;\n\t\t\tif ( cameraAttribute.NearPlane !== undefined ) {\n\n\t\t\t\tnearClippingPlane = cameraAttribute.NearPlane.value / 1000;\n\n\t\t\t}\n\n\t\t\tlet farClippingPlane = 1000;\n\t\t\tif ( cameraAttribute.FarPlane !== undefined ) {\n\n\t\t\t\tfarClippingPlane = cameraAttribute.FarPlane.value / 1000;\n\n\t\t\t}\n\n\n\t\t\tlet width = window.innerWidth;\n\t\t\tlet height = window.innerHeight;\n\n\t\t\tif ( cameraAttribute.AspectWidth !== undefined && cameraAttribute.AspectHeight !== undefined ) {\n\n\t\t\t\twidth = cameraAttribute.AspectWidth.value;\n\t\t\t\theight = cameraAttribute.AspectHeight.value;\n\n\t\t\t}\n\n\t\t\tconst aspect = width / height;\n\n\t\t\tlet fov = 45;\n\t\t\tif ( cameraAttribute.FieldOfView !== undefined ) {\n\n\t\t\t\tfov = cameraAttribute.FieldOfView.value;\n\n\t\t\t}\n\n\t\t\tconst focalLength = cameraAttribute.FocalLength ? cameraAttribute.FocalLength.value : null;\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 0: // Perspective\n\t\t\t\t\tmodel = new PerspectiveCamera( fov, aspect, nearClippingPlane, farClippingPlane );\n\t\t\t\t\tif ( focalLength !== null ) model.setFocalLength( focalLength );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1: // Orthographic\n\t\t\t\t\tmodel = new OrthographicCamera( - width / 2, width / 2, height / 2, - height / 2, nearClippingPlane, farClippingPlane );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown camera type ' + type + '.' );\n\t\t\t\t\tmodel = new Object3D();\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn model;\n\n\t}\n\n\t// Create a DirectionalLight, PointLight or SpotLight\n\tcreateLight( relationships ) {\n\n\t\tlet model;\n\t\tlet lightAttribute;\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tconst attr = fbxTree.Objects.NodeAttribute[ child.ID ];\n\n\t\t\tif ( attr !== undefined ) {\n\n\t\t\t\tlightAttribute = attr;\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( lightAttribute === undefined ) {\n\n\t\t\tmodel = new Object3D();\n\n\t\t} else {\n\n\t\t\tlet type;\n\n\t\t\t// LightType can be undefined for Point lights\n\t\t\tif ( lightAttribute.LightType === undefined ) {\n\n\t\t\t\ttype = 0;\n\n\t\t\t} else {\n\n\t\t\t\ttype = lightAttribute.LightType.value;\n\n\t\t\t}\n\n\t\t\tlet color = 0xffffff;\n\n\t\t\tif ( lightAttribute.Color !== undefined ) {\n\n\t\t\t\tcolor = new Color().fromArray( lightAttribute.Color.value ).convertSRGBToLinear();\n\n\t\t\t}\n\n\t\t\tlet intensity = ( lightAttribute.Intensity === undefined ) ? 1 : lightAttribute.Intensity.value / 100;\n\n\t\t\t// light disabled\n\t\t\tif ( lightAttribute.CastLightOnObject !== undefined && lightAttribute.CastLightOnObject.value === 0 ) {\n\n\t\t\t\tintensity = 0;\n\n\t\t\t}\n\n\t\t\tlet distance = 0;\n\t\t\tif ( lightAttribute.FarAttenuationEnd !== undefined ) {\n\n\t\t\t\tif ( lightAttribute.EnableFarAttenuation !== undefined && lightAttribute.EnableFarAttenuation.value === 0 ) {\n\n\t\t\t\t\tdistance = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdistance = lightAttribute.FarAttenuationEnd.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// TODO: could this be calculated linearly from FarAttenuationStart to FarAttenuationEnd?\n\t\t\tconst decay = 1;\n\n\t\t\tswitch ( type ) {\n\n\t\t\t\tcase 0: // Point\n\t\t\t\t\tmodel = new PointLight( color, intensity, distance, decay );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1: // Directional\n\t\t\t\t\tmodel = new DirectionalLight( color, intensity );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2: // Spot\n\t\t\t\t\tlet angle = Math.PI / 3;\n\n\t\t\t\t\tif ( lightAttribute.InnerAngle !== undefined ) {\n\n\t\t\t\t\t\tangle = MathUtils.degToRad( lightAttribute.InnerAngle.value );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet penumbra = 0;\n\t\t\t\t\tif ( lightAttribute.OuterAngle !== undefined ) {\n\n\t\t\t\t\t\t// TODO: this is not correct - FBX calculates outer and inner angle in degrees\n\t\t\t\t\t\t// with OuterAngle > InnerAngle && OuterAngle <= Math.PI\n\t\t\t\t\t\t// while three.js uses a penumbra between (0, 1) to attenuate the inner angle\n\t\t\t\t\t\tpenumbra = MathUtils.degToRad( lightAttribute.OuterAngle.value );\n\t\t\t\t\t\tpenumbra = Math.max( penumbra, 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmodel = new SpotLight( color, intensity, distance, angle, penumbra, decay );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Unknown light type ' + lightAttribute.LightType.value + ', defaulting to a PointLight.' );\n\t\t\t\t\tmodel = new PointLight( color, intensity );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( lightAttribute.CastShadows !== undefined && lightAttribute.CastShadows.value === 1 ) {\n\n\t\t\t\tmodel.castShadow = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn model;\n\n\t}\n\n\tcreateMesh( relationships, geometryMap, materialMap ) {\n\n\t\tlet model;\n\t\tlet geometry = null;\n\t\tlet material = null;\n\t\tconst materials = [];\n\n\t\t// get geometry and materials(s) from connections\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tif ( geometryMap.has( child.ID ) ) {\n\n\t\t\t\tgeometry = geometryMap.get( child.ID );\n\n\t\t\t}\n\n\t\t\tif ( materialMap.has( child.ID ) ) {\n\n\t\t\t\tmaterials.push( materialMap.get( child.ID ) );\n\n\t\t\t}\n\n\t\t} );\n\n\t\tif ( materials.length > 1 ) {\n\n\t\t\tmaterial = materials;\n\n\t\t} else if ( materials.length > 0 ) {\n\n\t\t\tmaterial = materials[ 0 ];\n\n\t\t} else {\n\n\t\t\tmaterial = new MeshPhongMaterial( {\n\t\t\t\tname: Loader.DEFAULT_MATERIAL_NAME,\n\t\t\t\tcolor: 0xcccccc\n\t\t\t} );\n\t\t\tmaterials.push( material );\n\n\t\t}\n\n\t\tif ( 'color' in geometry.attributes ) {\n\n\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( geometry.FBX_Deformer ) {\n\n\t\t\tmodel = new SkinnedMesh( geometry, material );\n\t\t\tmodel.normalizeSkinWeights();\n\n\t\t} else {\n\n\t\t\tmodel = new Mesh( geometry, material );\n\n\t\t}\n\n\t\treturn model;\n\n\t}\n\n\tcreateCurve( relationships, geometryMap ) {\n\n\t\tconst geometry = relationships.children.reduce( function ( geo, child ) {\n\n\t\t\tif ( geometryMap.has( child.ID ) ) geo = geometryMap.get( child.ID );\n\n\t\t\treturn geo;\n\n\t\t}, null );\n\n\t\t// FBX does not list materials for Nurbs lines, so we'll just put our own in here.\n\t\tconst material = new LineBasicMaterial( {\n\t\t\tname: Loader.DEFAULT_MATERIAL_NAME,\n\t\t\tcolor: 0x3300ff,\n\t\t\tlinewidth: 1\n\t\t} );\n\t\treturn new Line( geometry, material );\n\n\t}\n\n\t// parse the model node for transform data\n\tgetTransformData( model, modelNode ) {\n\n\t\tconst transformData = {};\n\n\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\telse transformData.eulerOrder = 'ZYX';\n\n\t\tif ( 'Lcl_Translation' in modelNode ) transformData.translation = modelNode.Lcl_Translation.value;\n\n\t\tif ( 'PreRotation' in modelNode ) transformData.preRotation = modelNode.PreRotation.value;\n\t\tif ( 'Lcl_Rotation' in modelNode ) transformData.rotation = modelNode.Lcl_Rotation.value;\n\t\tif ( 'PostRotation' in modelNode ) transformData.postRotation = modelNode.PostRotation.value;\n\n\t\tif ( 'Lcl_Scaling' in modelNode ) transformData.scale = modelNode.Lcl_Scaling.value;\n\n\t\tif ( 'ScalingOffset' in modelNode ) transformData.scalingOffset = modelNode.ScalingOffset.value;\n\t\tif ( 'ScalingPivot' in modelNode ) transformData.scalingPivot = modelNode.ScalingPivot.value;\n\n\t\tif ( 'RotationOffset' in modelNode ) transformData.rotationOffset = modelNode.RotationOffset.value;\n\t\tif ( 'RotationPivot' in modelNode ) transformData.rotationPivot = modelNode.RotationPivot.value;\n\n\t\tmodel.userData.transformData = transformData;\n\n\t}\n\n\tsetLookAtProperties( model, modelNode ) {\n\n\t\tif ( 'LookAtProperty' in modelNode ) {\n\n\t\t\tconst children = connections.get( model.ID ).children;\n\n\t\t\tchildren.forEach( function ( child ) {\n\n\t\t\t\tif ( child.relationship === 'LookAtProperty' ) {\n\n\t\t\t\t\tconst lookAtTarget = fbxTree.Objects.Model[ child.ID ];\n\n\t\t\t\t\tif ( 'Lcl_Translation' in lookAtTarget ) {\n\n\t\t\t\t\t\tconst pos = lookAtTarget.Lcl_Translation.value;\n\n\t\t\t\t\t\t// DirectionalLight, SpotLight\n\t\t\t\t\t\tif ( model.target !== undefined ) {\n\n\t\t\t\t\t\t\tmodel.target.position.fromArray( pos );\n\t\t\t\t\t\t\tsceneGraph.add( model.target );\n\n\t\t\t\t\t\t} else { // Cameras and other Object3Ds\n\n\t\t\t\t\t\t\tmodel.lookAt( new Vector3().fromArray( pos ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\tbindSkeleton( skeletons, geometryMap, modelMap ) {\n\n\t\tconst bindMatrices = this.parsePoseNodes();\n\n\t\tfor ( const ID in skeletons ) {\n\n\t\t\tconst skeleton = skeletons[ ID ];\n\n\t\t\tconst parents = connections.get( parseInt( skeleton.ID ) ).parents;\n\n\t\t\tparents.forEach( function ( parent ) {\n\n\t\t\t\tif ( geometryMap.has( parent.ID ) ) {\n\n\t\t\t\t\tconst geoID = parent.ID;\n\t\t\t\t\tconst geoRelationships = connections.get( geoID );\n\n\t\t\t\t\tgeoRelationships.parents.forEach( function ( geoConnParent ) {\n\n\t\t\t\t\t\tif ( modelMap.has( geoConnParent.ID ) ) {\n\n\t\t\t\t\t\t\tconst model = modelMap.get( geoConnParent.ID );\n\n\t\t\t\t\t\t\tmodel.bind( new Skeleton( skeleton.bones ), bindMatrices[ geoConnParent.ID ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\tparsePoseNodes() {\n\n\t\tconst bindMatrices = {};\n\n\t\tif ( 'Pose' in fbxTree.Objects ) {\n\n\t\t\tconst BindPoseNode = fbxTree.Objects.Pose;\n\n\t\t\tfor ( const nodeID in BindPoseNode ) {\n\n\t\t\t\tif ( BindPoseNode[ nodeID ].attrType === 'BindPose' && BindPoseNode[ nodeID ].NbPoseNodes > 0 ) {\n\n\t\t\t\t\tconst poseNodes = BindPoseNode[ nodeID ].PoseNode;\n\n\t\t\t\t\tif ( Array.isArray( poseNodes ) ) {\n\n\t\t\t\t\t\tposeNodes.forEach( function ( poseNode ) {\n\n\t\t\t\t\t\t\tbindMatrices[ poseNode.Node ] = new Matrix4().fromArray( poseNode.Matrix.a );\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbindMatrices[ poseNodes.Node ] = new Matrix4().fromArray( poseNodes.Matrix.a );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn bindMatrices;\n\n\t}\n\n\t// Parse ambient color in FBXTree.GlobalSettings - if it's not set to black (default), create an ambient light\n\tcreateAmbientLight() {\n\n\t\tif ( 'GlobalSettings' in fbxTree && 'AmbientColor' in fbxTree.GlobalSettings ) {\n\n\t\t\tconst ambientColor = fbxTree.GlobalSettings.AmbientColor.value;\n\t\t\tconst r = ambientColor[ 0 ];\n\t\t\tconst g = ambientColor[ 1 ];\n\t\t\tconst b = ambientColor[ 2 ];\n\n\t\t\tif ( r !== 0 || g !== 0 || b !== 0 ) {\n\n\t\t\t\tconst color = new Color( r, g, b ).convertSRGBToLinear();\n\t\t\t\tsceneGraph.add( new AmbientLight( color, 1 ) );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\n// parse Geometry data from FBXTree and return map of BufferGeometries\nclass GeometryParser {\n\n\tconstructor() {\n\n\t\tthis.negativeMaterialIndices = false;\n\n\t}\n\n\t// Parse nodes in FBXTree.Objects.Geometry\n\tparse( deformers ) {\n\n\t\tconst geometryMap = new Map();\n\n\t\tif ( 'Geometry' in fbxTree.Objects ) {\n\n\t\t\tconst geoNodes = fbxTree.Objects.Geometry;\n\n\t\t\tfor ( const nodeID in geoNodes ) {\n\n\t\t\t\tconst relationships = connections.get( parseInt( nodeID ) );\n\t\t\t\tconst geo = this.parseGeometry( relationships, geoNodes[ nodeID ], deformers );\n\n\t\t\t\tgeometryMap.set( parseInt( nodeID ), geo );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// report warnings\n\n\t\tif ( this.negativeMaterialIndices === true ) {\n\n\t\t\tconsole.warn( 'THREE.FBXLoader: The FBX file contains invalid (negative) material indices. The asset might not render as expected.' );\n\n\t\t}\n\n\t\treturn geometryMap;\n\n\t}\n\n\t// Parse single node in FBXTree.Objects.Geometry\n\tparseGeometry( relationships, geoNode, deformers ) {\n\n\t\tswitch ( geoNode.attrType ) {\n\n\t\t\tcase 'Mesh':\n\t\t\t\treturn this.parseMeshGeometry( relationships, geoNode, deformers );\n\t\t\t\tbreak;\n\n\t\t\tcase 'NurbsCurve':\n\t\t\t\treturn this.parseNurbsGeometry( geoNode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\t// Parse single node mesh geometry in FBXTree.Objects.Geometry\n\tparseMeshGeometry( relationships, geoNode, deformers ) {\n\n\t\tconst skeletons = deformers.skeletons;\n\t\tconst morphTargets = [];\n\n\t\tconst modelNodes = relationships.parents.map( function ( parent ) {\n\n\t\t\treturn fbxTree.Objects.Model[ parent.ID ];\n\n\t\t} );\n\n\t\t// don't create geometry if it is not associated with any models\n\t\tif ( modelNodes.length === 0 ) return;\n\n\t\tconst skeleton = relationships.children.reduce( function ( skeleton, child ) {\n\n\t\t\tif ( skeletons[ child.ID ] !== undefined ) skeleton = skeletons[ child.ID ];\n\n\t\t\treturn skeleton;\n\n\t\t}, null );\n\n\t\trelationships.children.forEach( function ( child ) {\n\n\t\t\tif ( deformers.morphTargets[ child.ID ] !== undefined ) {\n\n\t\t\t\tmorphTargets.push( deformers.morphTargets[ child.ID ] );\n\n\t\t\t}\n\n\t\t} );\n\n\t\t// Assume one model and get the preRotation from that\n\t\t// if there is more than one model associated with the geometry this may cause problems\n\t\tconst modelNode = modelNodes[ 0 ];\n\n\t\tconst transformData = {};\n\n\t\tif ( 'RotationOrder' in modelNode ) transformData.eulerOrder = getEulerOrder( modelNode.RotationOrder.value );\n\t\tif ( 'InheritType' in modelNode ) transformData.inheritType = parseInt( modelNode.InheritType.value );\n\n\t\tif ( 'GeometricTranslation' in modelNode ) transformData.translation = modelNode.GeometricTranslation.value;\n\t\tif ( 'GeometricRotation' in modelNode ) transformData.rotation = modelNode.GeometricRotation.value;\n\t\tif ( 'GeometricScaling' in modelNode ) transformData.scale = modelNode.GeometricScaling.value;\n\n\t\tconst transform = generateTransform( transformData );\n\n\t\treturn this.genGeometry( geoNode, skeleton, morphTargets, transform );\n\n\t}\n\n\t// Generate a BufferGeometry from a node in FBXTree.Objects.Geometry\n\tgenGeometry( geoNode, skeleton, morphTargets, preTransform ) {\n\n\t\tconst geo = new BufferGeometry();\n\t\tif ( geoNode.attrName ) geo.name = geoNode.attrName;\n\n\t\tconst geoInfo = this.parseGeoNode( geoNode, skeleton );\n\t\tconst buffers = this.genBuffers( geoInfo );\n\n\t\tconst positionAttribute = new Float32BufferAttribute( buffers.vertex, 3 );\n\n\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\tgeo.setAttribute( 'position', positionAttribute );\n\n\t\tif ( buffers.colors.length > 0 ) {\n\n\t\t\tgeo.setAttribute( 'color', new Float32BufferAttribute( buffers.colors, 3 ) );\n\n\t\t}\n\n\t\tif ( skeleton ) {\n\n\t\t\tgeo.setAttribute( 'skinIndex', new Uint16BufferAttribute( buffers.weightsIndices, 4 ) );\n\n\t\t\tgeo.setAttribute( 'skinWeight', new Float32BufferAttribute( buffers.vertexWeights, 4 ) );\n\n\t\t\t// used later to bind the skeleton to the model\n\t\t\tgeo.FBX_Deformer = skeleton;\n\n\t\t}\n\n\t\tif ( buffers.normal.length > 0 ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( preTransform );\n\n\t\t\tconst normalAttribute = new Float32BufferAttribute( buffers.normal, 3 );\n\t\t\tnormalAttribute.applyNormalMatrix( normalMatrix );\n\n\t\t\tgeo.setAttribute( 'normal', normalAttribute );\n\n\t\t}\n\n\t\tbuffers.uvs.forEach( function ( uvBuffer, i ) {\n\n\t\t\tconst name = i === 0 ? 'uv' : `uv${ i }`;\n\n\t\t\tgeo.setAttribute( name, new Float32BufferAttribute( buffers.uvs[ i ], 2 ) );\n\n\t\t} );\n\n\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t// Convert the material indices of each vertex into rendering groups on the geometry.\n\t\t\tlet prevMaterialIndex = buffers.materialIndex[ 0 ];\n\t\t\tlet startIndex = 0;\n\n\t\t\tbuffers.materialIndex.forEach( function ( currentIndex, i ) {\n\n\t\t\t\tif ( currentIndex !== prevMaterialIndex ) {\n\n\t\t\t\t\tgeo.addGroup( startIndex, i - startIndex, prevMaterialIndex );\n\n\t\t\t\t\tprevMaterialIndex = currentIndex;\n\t\t\t\t\tstartIndex = i;\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\t// the loop above doesn't add the last group, do that here.\n\t\t\tif ( geo.groups.length > 0 ) {\n\n\t\t\t\tconst lastGroup = geo.groups[ geo.groups.length - 1 ];\n\t\t\t\tconst lastIndex = lastGroup.start + lastGroup.count;\n\n\t\t\t\tif ( lastIndex !== buffers.materialIndex.length ) {\n\n\t\t\t\t\tgeo.addGroup( lastIndex, buffers.materialIndex.length - lastIndex, prevMaterialIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// case where there are multiple materials but the whole geometry is only\n\t\t\t// using one of them\n\t\t\tif ( geo.groups.length === 0 ) {\n\n\t\t\t\tgeo.addGroup( 0, buffers.materialIndex.length, buffers.materialIndex[ 0 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.addMorphTargets( geo, geoNode, morphTargets, preTransform );\n\n\t\treturn geo;\n\n\t}\n\n\tparseGeoNode( geoNode, skeleton ) {\n\n\t\tconst geoInfo = {};\n\n\t\tgeoInfo.vertexPositions = ( geoNode.Vertices !== undefined ) ? geoNode.Vertices.a : [];\n\t\tgeoInfo.vertexIndices = ( geoNode.PolygonVertexIndex !== undefined ) ? geoNode.PolygonVertexIndex.a : [];\n\n\t\tif ( geoNode.LayerElementColor ) {\n\n\t\t\tgeoInfo.color = this.parseVertexColors( geoNode.LayerElementColor[ 0 ] );\n\n\t\t}\n\n\t\tif ( geoNode.LayerElementMaterial ) {\n\n\t\t\tgeoInfo.material = this.parseMaterialIndices( geoNode.LayerElementMaterial[ 0 ] );\n\n\t\t}\n\n\t\tif ( geoNode.LayerElementNormal ) {\n\n\t\t\tgeoInfo.normal = this.parseNormals( geoNode.LayerElementNormal[ 0 ] );\n\n\t\t}\n\n\t\tif ( geoNode.LayerElementUV ) {\n\n\t\t\tgeoInfo.uv = [];\n\n\t\t\tlet i = 0;\n\t\t\twhile ( geoNode.LayerElementUV[ i ] ) {\n\n\t\t\t\tif ( geoNode.LayerElementUV[ i ].UV ) {\n\n\t\t\t\t\tgeoInfo.uv.push( this.parseUVs( geoNode.LayerElementUV[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeoInfo.weightTable = {};\n\n\t\tif ( skeleton !== null ) {\n\n\t\t\tgeoInfo.skeleton = skeleton;\n\n\t\t\tskeleton.rawBones.forEach( function ( rawBone, i ) {\n\n\t\t\t\t// loop over the bone's vertex indices and weights\n\t\t\t\trawBone.indices.forEach( function ( index, j ) {\n\n\t\t\t\t\tif ( geoInfo.weightTable[ index ] === undefined ) geoInfo.weightTable[ index ] = [];\n\n\t\t\t\t\tgeoInfo.weightTable[ index ].push( {\n\n\t\t\t\t\t\tid: i,\n\t\t\t\t\t\tweight: rawBone.weights[ j ],\n\n\t\t\t\t\t} );\n\n\t\t\t\t} );\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn geoInfo;\n\n\t}\n\n\tgenBuffers( geoInfo ) {\n\n\t\tconst buffers = {\n\t\t\tvertex: [],\n\t\t\tnormal: [],\n\t\t\tcolors: [],\n\t\t\tuvs: [],\n\t\t\tmaterialIndex: [],\n\t\t\tvertexWeights: [],\n\t\t\tweightsIndices: [],\n\t\t};\n\n\t\tlet polygonIndex = 0;\n\t\tlet faceLength = 0;\n\t\tlet displayedWeightsWarning = false;\n\n\t\t// these will hold data for a single face\n\t\tlet facePositionIndexes = [];\n\t\tlet faceNormals = [];\n\t\tlet faceColors = [];\n\t\tlet faceUVs = [];\n\t\tlet faceWeights = [];\n\t\tlet faceWeightIndices = [];\n\n\t\tconst scope = this;\n\t\tgeoInfo.vertexIndices.forEach( function ( vertexIndex, polygonVertexIndex ) {\n\n\t\t\tlet materialIndex;\n\t\t\tlet endOfFace = false;\n\n\t\t\t// Face index and vertex index arrays are combined in a single array\n\t\t\t// A cube with quad faces looks like this:\n\t\t\t// PolygonVertexIndex: *24 {\n\t\t\t//  a: 0, 1, 3, -3, 2, 3, 5, -5, 4, 5, 7, -7, 6, 7, 1, -1, 1, 7, 5, -4, 6, 0, 2, -5\n\t\t\t//  }\n\t\t\t// Negative numbers mark the end of a face - first face here is 0, 1, 3, -3\n\t\t\t// to find index of last vertex bit shift the index: ^ - 1\n\t\t\tif ( vertexIndex < 0 ) {\n\n\t\t\t\tvertexIndex = vertexIndex ^ - 1; // equivalent to ( x * -1 ) - 1\n\t\t\t\tendOfFace = true;\n\n\t\t\t}\n\n\t\t\tlet weightIndices = [];\n\t\t\tlet weights = [];\n\n\t\t\tfacePositionIndexes.push( vertexIndex * 3, vertexIndex * 3 + 1, vertexIndex * 3 + 2 );\n\n\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.color );\n\n\t\t\t\tfaceColors.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\tif ( geoInfo.weightTable[ vertexIndex ] !== undefined ) {\n\n\t\t\t\t\tgeoInfo.weightTable[ vertexIndex ].forEach( function ( wt ) {\n\n\t\t\t\t\t\tweights.push( wt.weight );\n\t\t\t\t\t\tweightIndices.push( wt.id );\n\n\t\t\t\t\t} );\n\n\n\t\t\t\t}\n\n\t\t\t\tif ( weights.length > 4 ) {\n\n\t\t\t\t\tif ( ! displayedWeightsWarning ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Vertex has more than 4 skinning weights assigned to vertex. Deleting additional weights.' );\n\t\t\t\t\t\tdisplayedWeightsWarning = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst wIndex = [ 0, 0, 0, 0 ];\n\t\t\t\t\tconst Weight = [ 0, 0, 0, 0 ];\n\n\t\t\t\t\tweights.forEach( function ( weight, weightIndex ) {\n\n\t\t\t\t\t\tlet currentWeight = weight;\n\t\t\t\t\t\tlet currentIndex = weightIndices[ weightIndex ];\n\n\t\t\t\t\t\tWeight.forEach( function ( comparedWeight, comparedWeightIndex, comparedWeightArray ) {\n\n\t\t\t\t\t\t\tif ( currentWeight > comparedWeight ) {\n\n\t\t\t\t\t\t\t\tcomparedWeightArray[ comparedWeightIndex ] = currentWeight;\n\t\t\t\t\t\t\t\tcurrentWeight = comparedWeight;\n\n\t\t\t\t\t\t\t\tconst tmp = wIndex[ comparedWeightIndex ];\n\t\t\t\t\t\t\t\twIndex[ comparedWeightIndex ] = currentIndex;\n\t\t\t\t\t\t\t\tcurrentIndex = tmp;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tweightIndices = wIndex;\n\t\t\t\t\tweights = Weight;\n\n\t\t\t\t}\n\n\t\t\t\t// if the weight array is shorter than 4 pad with 0s\n\t\t\t\twhile ( weights.length < 4 ) {\n\n\t\t\t\t\tweights.push( 0 );\n\t\t\t\t\tweightIndices.push( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 4; ++ i ) {\n\n\t\t\t\t\tfaceWeights.push( weights[ i ] );\n\t\t\t\t\tfaceWeightIndices.push( weightIndices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.normal );\n\n\t\t\t\tfaceNormals.push( data[ 0 ], data[ 1 ], data[ 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\tmaterialIndex = getData( polygonVertexIndex, polygonIndex, vertexIndex, geoInfo.material )[ 0 ];\n\n\t\t\t\tif ( materialIndex < 0 ) {\n\n\t\t\t\t\tscope.negativeMaterialIndices = true;\n\t\t\t\t\tmaterialIndex = 0; // fallback\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\tgeoInfo.uv.forEach( function ( uv, i ) {\n\n\t\t\t\t\tconst data = getData( polygonVertexIndex, polygonIndex, vertexIndex, uv );\n\n\t\t\t\t\tif ( faceUVs[ i ] === undefined ) {\n\n\t\t\t\t\t\tfaceUVs[ i ] = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceUVs[ i ].push( data[ 0 ] );\n\t\t\t\t\tfaceUVs[ i ].push( data[ 1 ] );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tfaceLength ++;\n\n\t\t\tif ( endOfFace ) {\n\n\t\t\t\tif ( faceLength > 4 ) console.warn( 'THREE.FBXLoader: Polygons with more than four sides are not supported. Make sure to triangulate the geometry during export.' );\n\n\t\t\t\tscope.genFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength );\n\n\t\t\t\tpolygonIndex ++;\n\t\t\t\tfaceLength = 0;\n\n\t\t\t\t// reset arrays for the next face\n\t\t\t\tfacePositionIndexes = [];\n\t\t\t\tfaceNormals = [];\n\t\t\t\tfaceColors = [];\n\t\t\t\tfaceUVs = [];\n\t\t\t\tfaceWeights = [];\n\t\t\t\tfaceWeightIndices = [];\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn buffers;\n\n\t}\n\n\t// Generate data for a single face in a geometry. If the face is a quad then split it into 2 tris\n\tgenFace( buffers, geoInfo, facePositionIndexes, materialIndex, faceNormals, faceColors, faceUVs, faceWeights, faceWeightIndices, faceLength ) {\n\n\t\tfor ( let i = 2; i < faceLength; i ++ ) {\n\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 0 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 1 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ 2 ] ] );\n\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 1 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ ( i - 1 ) * 3 + 2 ] ] );\n\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 1 ] ] );\n\t\t\tbuffers.vertex.push( geoInfo.vertexPositions[ facePositionIndexes[ i * 3 + 2 ] ] );\n\n\t\t\tif ( geoInfo.skeleton ) {\n\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 0 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 1 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 2 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ 3 ] );\n\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 1 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 2 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ ( i - 1 ) * 4 + 3 ] );\n\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 1 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 2 ] );\n\t\t\t\tbuffers.vertexWeights.push( faceWeights[ i * 4 + 3 ] );\n\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 0 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 1 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 2 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ 3 ] );\n\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 1 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 2 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ ( i - 1 ) * 4 + 3 ] );\n\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 1 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 2 ] );\n\t\t\t\tbuffers.weightsIndices.push( faceWeightIndices[ i * 4 + 3 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.color ) {\n\n\t\t\t\tbuffers.colors.push( faceColors[ 0 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ 1 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ 2 ] );\n\n\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 1 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ ( i - 1 ) * 3 + 2 ] );\n\n\t\t\t\tbuffers.colors.push( faceColors[ i * 3 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 1 ] );\n\t\t\t\tbuffers.colors.push( faceColors[ i * 3 + 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.material && geoInfo.material.mappingType !== 'AllSame' ) {\n\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\t\t\t\tbuffers.materialIndex.push( materialIndex );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.normal ) {\n\n\t\t\t\tbuffers.normal.push( faceNormals[ 0 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ 1 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ 2 ] );\n\n\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 1 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ ( i - 1 ) * 3 + 2 ] );\n\n\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 1 ] );\n\t\t\t\tbuffers.normal.push( faceNormals[ i * 3 + 2 ] );\n\n\t\t\t}\n\n\t\t\tif ( geoInfo.uv ) {\n\n\t\t\t\tgeoInfo.uv.forEach( function ( uv, j ) {\n\n\t\t\t\t\tif ( buffers.uvs[ j ] === undefined ) buffers.uvs[ j ] = [];\n\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 0 ] );\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ 1 ] );\n\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 ] );\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ ( i - 1 ) * 2 + 1 ] );\n\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 ] );\n\t\t\t\t\tbuffers.uvs[ j ].push( faceUVs[ j ][ i * 2 + 1 ] );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\taddMorphTargets( parentGeo, parentGeoNode, morphTargets, preTransform ) {\n\n\t\tif ( morphTargets.length === 0 ) return;\n\n\t\tparentGeo.morphTargetsRelative = true;\n\n\t\tparentGeo.morphAttributes.position = [];\n\t\t// parentGeo.morphAttributes.normal = []; // not implemented\n\n\t\tconst scope = this;\n\t\tmorphTargets.forEach( function ( morphTarget ) {\n\n\t\t\tmorphTarget.rawTargets.forEach( function ( rawTarget ) {\n\n\t\t\t\tconst morphGeoNode = fbxTree.Objects.Geometry[ rawTarget.geoID ];\n\n\t\t\t\tif ( morphGeoNode !== undefined ) {\n\n\t\t\t\t\tscope.genMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, rawTarget.name );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t// a morph geometry node is similar to a standard  node, and the node is also contained\n\t// in FBXTree.Objects.Geometry, however it can only have attributes for position, normal\n\t// and a special attribute Index defining which vertices of the original geometry are affected\n\t// Normal and position attributes only have data for the vertices that are affected by the morph\n\tgenMorphGeometry( parentGeo, parentGeoNode, morphGeoNode, preTransform, name ) {\n\n\t\tconst vertexIndices = ( parentGeoNode.PolygonVertexIndex !== undefined ) ? parentGeoNode.PolygonVertexIndex.a : [];\n\n\t\tconst morphPositionsSparse = ( morphGeoNode.Vertices !== undefined ) ? morphGeoNode.Vertices.a : [];\n\t\tconst indices = ( morphGeoNode.Indexes !== undefined ) ? morphGeoNode.Indexes.a : [];\n\n\t\tconst length = parentGeo.attributes.position.count * 3;\n\t\tconst morphPositions = new Float32Array( length );\n\n\t\tfor ( let i = 0; i < indices.length; i ++ ) {\n\n\t\t\tconst morphIndex = indices[ i ] * 3;\n\n\t\t\tmorphPositions[ morphIndex ] = morphPositionsSparse[ i * 3 ];\n\t\t\tmorphPositions[ morphIndex + 1 ] = morphPositionsSparse[ i * 3 + 1 ];\n\t\t\tmorphPositions[ morphIndex + 2 ] = morphPositionsSparse[ i * 3 + 2 ];\n\n\t\t}\n\n\t\t// TODO: add morph normal support\n\t\tconst morphGeoInfo = {\n\t\t\tvertexIndices: vertexIndices,\n\t\t\tvertexPositions: morphPositions,\n\n\t\t};\n\n\t\tconst morphBuffers = this.genBuffers( morphGeoInfo );\n\n\t\tconst positionAttribute = new Float32BufferAttribute( morphBuffers.vertex, 3 );\n\t\tpositionAttribute.name = name || morphGeoNode.attrName;\n\n\t\tpositionAttribute.applyMatrix4( preTransform );\n\n\t\tparentGeo.morphAttributes.position.push( positionAttribute );\n\n\t}\n\n\t// Parse normal from FBXTree.Objects.Geometry.LayerElementNormal if it exists\n\tparseNormals( NormalNode ) {\n\n\t\tconst mappingType = NormalNode.MappingInformationType;\n\t\tconst referenceType = NormalNode.ReferenceInformationType;\n\t\tconst buffer = NormalNode.Normals.a;\n\t\tlet indexBuffer = [];\n\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\tif ( 'NormalIndex' in NormalNode ) {\n\n\t\t\t\tindexBuffer = NormalNode.NormalIndex.a;\n\n\t\t\t} else if ( 'NormalsIndex' in NormalNode ) {\n\n\t\t\t\tindexBuffer = NormalNode.NormalsIndex.a;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 3,\n\t\t\tbuffer: buffer,\n\t\t\tindices: indexBuffer,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Parse UVs from FBXTree.Objects.Geometry.LayerElementUV if it exists\n\tparseUVs( UVNode ) {\n\n\t\tconst mappingType = UVNode.MappingInformationType;\n\t\tconst referenceType = UVNode.ReferenceInformationType;\n\t\tconst buffer = UVNode.UV.a;\n\t\tlet indexBuffer = [];\n\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\tindexBuffer = UVNode.UVIndex.a;\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 2,\n\t\t\tbuffer: buffer,\n\t\t\tindices: indexBuffer,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Parse Vertex Colors from FBXTree.Objects.Geometry.LayerElementColor if it exists\n\tparseVertexColors( ColorNode ) {\n\n\t\tconst mappingType = ColorNode.MappingInformationType;\n\t\tconst referenceType = ColorNode.ReferenceInformationType;\n\t\tconst buffer = ColorNode.Colors.a;\n\t\tlet indexBuffer = [];\n\t\tif ( referenceType === 'IndexToDirect' ) {\n\n\t\t\tindexBuffer = ColorNode.ColorIndex.a;\n\n\t\t}\n\n\t\tfor ( let i = 0, c = new Color(); i < buffer.length; i += 4 ) {\n\n\t\t\tc.fromArray( buffer, i ).convertSRGBToLinear().toArray( buffer, i );\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 4,\n\t\t\tbuffer: buffer,\n\t\t\tindices: indexBuffer,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Parse mapping and material data in FBXTree.Objects.Geometry.LayerElementMaterial if it exists\n\tparseMaterialIndices( MaterialNode ) {\n\n\t\tconst mappingType = MaterialNode.MappingInformationType;\n\t\tconst referenceType = MaterialNode.ReferenceInformationType;\n\n\t\tif ( mappingType === 'NoMappingInformation' ) {\n\n\t\t\treturn {\n\t\t\t\tdataSize: 1,\n\t\t\t\tbuffer: [ 0 ],\n\t\t\t\tindices: [ 0 ],\n\t\t\t\tmappingType: 'AllSame',\n\t\t\t\treferenceType: referenceType\n\t\t\t};\n\n\t\t}\n\n\t\tconst materialIndexBuffer = MaterialNode.Materials.a;\n\n\t\t// Since materials are stored as indices, there's a bit of a mismatch between FBX and what\n\t\t// we expect.So we create an intermediate buffer that points to the index in the buffer,\n\t\t// for conforming with the other functions we've written for other data.\n\t\tconst materialIndices = [];\n\n\t\tfor ( let i = 0; i < materialIndexBuffer.length; ++ i ) {\n\n\t\t\tmaterialIndices.push( i );\n\n\t\t}\n\n\t\treturn {\n\t\t\tdataSize: 1,\n\t\t\tbuffer: materialIndexBuffer,\n\t\t\tindices: materialIndices,\n\t\t\tmappingType: mappingType,\n\t\t\treferenceType: referenceType\n\t\t};\n\n\t}\n\n\t// Generate a NurbGeometry from a node in FBXTree.Objects.Geometry\n\tparseNurbsGeometry( geoNode ) {\n\n\t\tconst order = parseInt( geoNode.Order );\n\n\t\tif ( isNaN( order ) ) {\n\n\t\t\tconsole.error( 'THREE.FBXLoader: Invalid Order %s given for geometry ID: %s', geoNode.Order, geoNode.id );\n\t\t\treturn new BufferGeometry();\n\n\t\t}\n\n\t\tconst degree = order - 1;\n\n\t\tconst knots = geoNode.KnotVector.a;\n\t\tconst controlPoints = [];\n\t\tconst pointsValues = geoNode.Points.a;\n\n\t\tfor ( let i = 0, l = pointsValues.length; i < l; i += 4 ) {\n\n\t\t\tcontrolPoints.push( new Vector4().fromArray( pointsValues, i ) );\n\n\t\t}\n\n\t\tlet startKnot, endKnot;\n\n\t\tif ( geoNode.Form === 'Closed' ) {\n\n\t\t\tcontrolPoints.push( controlPoints[ 0 ] );\n\n\t\t} else if ( geoNode.Form === 'Periodic' ) {\n\n\t\t\tstartKnot = degree;\n\t\t\tendKnot = knots.length - 1 - startKnot;\n\n\t\t\tfor ( let i = 0; i < degree; ++ i ) {\n\n\t\t\t\tcontrolPoints.push( controlPoints[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst curve = new NURBSCurve( degree, knots, controlPoints, startKnot, endKnot );\n\t\tconst points = curve.getPoints( controlPoints.length * 12 );\n\n\t\treturn new BufferGeometry().setFromPoints( points );\n\n\t}\n\n}\n\n// parse animation data from FBXTree\nclass AnimationParser {\n\n\t// take raw animation clips and turn them into three.js animation clips\n\tparse() {\n\n\t\tconst animationClips = [];\n\n\t\tconst rawClips = this.parseClips();\n\n\t\tif ( rawClips !== undefined ) {\n\n\t\t\tfor ( const key in rawClips ) {\n\n\t\t\t\tconst rawClip = rawClips[ key ];\n\n\t\t\t\tconst clip = this.addClip( rawClip );\n\n\t\t\t\tanimationClips.push( clip );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animationClips;\n\n\t}\n\n\tparseClips() {\n\n\t\t// since the actual transformation data is stored in FBXTree.Objects.AnimationCurve,\n\t\t// if this is undefined we can safely assume there are no animations\n\t\tif ( fbxTree.Objects.AnimationCurve === undefined ) return undefined;\n\n\t\tconst curveNodesMap = this.parseAnimationCurveNodes();\n\n\t\tthis.parseAnimationCurves( curveNodesMap );\n\n\t\tconst layersMap = this.parseAnimationLayers( curveNodesMap );\n\t\tconst rawClips = this.parseAnimStacks( layersMap );\n\n\t\treturn rawClips;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationCurveNode\n\t// each AnimationCurveNode holds data for an animation transform for a model (e.g. left arm rotation )\n\t// and is referenced by an AnimationLayer\n\tparseAnimationCurveNodes() {\n\n\t\tconst rawCurveNodes = fbxTree.Objects.AnimationCurveNode;\n\n\t\tconst curveNodesMap = new Map();\n\n\t\tfor ( const nodeID in rawCurveNodes ) {\n\n\t\t\tconst rawCurveNode = rawCurveNodes[ nodeID ];\n\n\t\t\tif ( rawCurveNode.attrName.match( /S|R|T|DeformPercent/ ) !== null ) {\n\n\t\t\t\tconst curveNode = {\n\n\t\t\t\t\tid: rawCurveNode.id,\n\t\t\t\t\tattr: rawCurveNode.attrName,\n\t\t\t\t\tcurves: {},\n\n\t\t\t\t};\n\n\t\t\t\tcurveNodesMap.set( curveNode.id, curveNode );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn curveNodesMap;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationCurve and connect them up to\n\t// previously parsed AnimationCurveNodes. Each AnimationCurve holds data for a single animated\n\t// axis ( e.g. times and values of x rotation)\n\tparseAnimationCurves( curveNodesMap ) {\n\n\t\tconst rawCurves = fbxTree.Objects.AnimationCurve;\n\n\t\t// TODO: Many values are identical up to roundoff error, but won't be optimised\n\t\t// e.g. position times: [0, 0.4, 0. 8]\n\t\t// position values: [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.23538335023477e-7, 93.67518615722656, -0.9982695579528809, 7.235384487103147e-7, 93.67520904541016, -0.9982695579528809]\n\t\t// clearly, this should be optimised to\n\t\t// times: [0], positions [7.23538335023477e-7, 93.67518615722656, -0.9982695579528809]\n\t\t// this shows up in nearly every FBX file, and generally time array is length > 100\n\n\t\tfor ( const nodeID in rawCurves ) {\n\n\t\t\tconst animationCurve = {\n\n\t\t\t\tid: rawCurves[ nodeID ].id,\n\t\t\t\ttimes: rawCurves[ nodeID ].KeyTime.a.map( convertFBXTimeToSeconds ),\n\t\t\t\tvalues: rawCurves[ nodeID ].KeyValueFloat.a,\n\n\t\t\t};\n\n\t\t\tconst relationships = connections.get( animationCurve.id );\n\n\t\t\tif ( relationships !== undefined ) {\n\n\t\t\t\tconst animationCurveID = relationships.parents[ 0 ].ID;\n\t\t\t\tconst animationCurveRelationship = relationships.parents[ 0 ].relationship;\n\n\t\t\t\tif ( animationCurveRelationship.match( /X/ ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'x' ] = animationCurve;\n\n\t\t\t\t} else if ( animationCurveRelationship.match( /Y/ ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'y' ] = animationCurve;\n\n\t\t\t\t} else if ( animationCurveRelationship.match( /Z/ ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'z' ] = animationCurve;\n\n\t\t\t\t} else if ( animationCurveRelationship.match( /DeformPercent/ ) && curveNodesMap.has( animationCurveID ) ) {\n\n\t\t\t\t\tcurveNodesMap.get( animationCurveID ).curves[ 'morph' ] = animationCurve;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationLayer. Each layers holds references\n\t// to various AnimationCurveNodes and is referenced by an AnimationStack node\n\t// note: theoretically a stack can have multiple layers, however in practice there always seems to be one per stack\n\tparseAnimationLayers( curveNodesMap ) {\n\n\t\tconst rawLayers = fbxTree.Objects.AnimationLayer;\n\n\t\tconst layersMap = new Map();\n\n\t\tfor ( const nodeID in rawLayers ) {\n\n\t\t\tconst layerCurveNodes = [];\n\n\t\t\tconst connection = connections.get( parseInt( nodeID ) );\n\n\t\t\tif ( connection !== undefined ) {\n\n\t\t\t\t// all the animationCurveNodes used in the layer\n\t\t\t\tconst children = connection.children;\n\n\t\t\t\tchildren.forEach( function ( child, i ) {\n\n\t\t\t\t\tif ( curveNodesMap.has( child.ID ) ) {\n\n\t\t\t\t\t\tconst curveNode = curveNodesMap.get( child.ID );\n\n\t\t\t\t\t\t// check that the curves are defined for at least one axis, otherwise ignore the curveNode\n\t\t\t\t\t\tif ( curveNode.curves.x !== undefined || curveNode.curves.y !== undefined || curveNode.curves.z !== undefined ) {\n\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\tconst modelID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\tif ( modelID !== undefined ) {\n\n\t\t\t\t\t\t\t\t\tconst rawModel = fbxTree.Objects.Model[ modelID.toString() ];\n\n\t\t\t\t\t\t\t\t\tif ( rawModel === undefined ) {\n\n\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered a unused curve.', child );\n\t\t\t\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst node = {\n\n\t\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\t\tID: rawModel.id,\n\t\t\t\t\t\t\t\t\t\tinitialPosition: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\tinitialRotation: [ 0, 0, 0 ],\n\t\t\t\t\t\t\t\t\t\tinitialScale: [ 1, 1, 1 ],\n\n\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\tsceneGraph.traverse( function ( child ) {\n\n\t\t\t\t\t\t\t\t\t\tif ( child.ID === rawModel.id ) {\n\n\t\t\t\t\t\t\t\t\t\t\tnode.transform = child.matrix;\n\n\t\t\t\t\t\t\t\t\t\t\tif ( child.userData.transformData ) node.eulerOrder = child.userData.transformData.eulerOrder;\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t\t\tif ( ! node.transform ) node.transform = new Matrix4();\n\n\t\t\t\t\t\t\t\t\t// if the animated model is pre rotated, we'll have to apply the pre rotations to every\n\t\t\t\t\t\t\t\t\t// animation value as well\n\t\t\t\t\t\t\t\t\tif ( 'PreRotation' in rawModel ) node.preRotation = rawModel.PreRotation.value;\n\t\t\t\t\t\t\t\t\tif ( 'PostRotation' in rawModel ) node.postRotation = rawModel.PostRotation.value;\n\n\t\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] ) layerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t} else if ( curveNode.curves.morph !== undefined ) {\n\n\t\t\t\t\t\t\tif ( layerCurveNodes[ i ] === undefined ) {\n\n\t\t\t\t\t\t\t\tconst deformerID = connections.get( child.ID ).parents.filter( function ( parent ) {\n\n\t\t\t\t\t\t\t\t\treturn parent.relationship !== undefined;\n\n\t\t\t\t\t\t\t\t} )[ 0 ].ID;\n\n\t\t\t\t\t\t\t\tconst morpherID = connections.get( deformerID ).parents[ 0 ].ID;\n\t\t\t\t\t\t\t\tconst geoID = connections.get( morpherID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\t// assuming geometry is not used in more than one model\n\t\t\t\t\t\t\t\tconst modelID = connections.get( geoID ).parents[ 0 ].ID;\n\n\t\t\t\t\t\t\t\tconst rawModel = fbxTree.Objects.Model[ modelID ];\n\n\t\t\t\t\t\t\t\tconst node = {\n\n\t\t\t\t\t\t\t\t\tmodelName: rawModel.attrName ? PropertyBinding.sanitizeNodeName( rawModel.attrName ) : '',\n\t\t\t\t\t\t\t\t\tmorphName: fbxTree.Objects.Deformer[ deformerID ].attrName,\n\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\tlayerCurveNodes[ i ] = node;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tlayerCurveNodes[ i ][ curveNode.attr ] = curveNode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tlayersMap.set( parseInt( nodeID ), layerCurveNodes );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn layersMap;\n\n\t}\n\n\t// parse nodes in FBXTree.Objects.AnimationStack. These are the top level node in the animation\n\t// hierarchy. Each Stack node will be used to create a AnimationClip\n\tparseAnimStacks( layersMap ) {\n\n\t\tconst rawStacks = fbxTree.Objects.AnimationStack;\n\n\t\t// connect the stacks (clips) up to the layers\n\t\tconst rawClips = {};\n\n\t\tfor ( const nodeID in rawStacks ) {\n\n\t\t\tconst children = connections.get( parseInt( nodeID ) ).children;\n\n\t\t\tif ( children.length > 1 ) {\n\n\t\t\t\t// it seems like stacks will always be associated with a single layer. But just in case there are files\n\t\t\t\t// where there are multiple layers per stack, we'll display a warning\n\t\t\t\tconsole.warn( 'THREE.FBXLoader: Encountered an animation stack with multiple layers, this is currently not supported. Ignoring subsequent layers.' );\n\n\t\t\t}\n\n\t\t\tconst layer = layersMap.get( children[ 0 ].ID );\n\n\t\t\trawClips[ nodeID ] = {\n\n\t\t\t\tname: rawStacks[ nodeID ].attrName,\n\t\t\t\tlayer: layer,\n\n\t\t\t};\n\n\t\t}\n\n\t\treturn rawClips;\n\n\t}\n\n\taddClip( rawClip ) {\n\n\t\tlet tracks = [];\n\n\t\tconst scope = this;\n\t\trawClip.layer.forEach( function ( rawTracks ) {\n\n\t\t\ttracks = tracks.concat( scope.generateTracks( rawTracks ) );\n\n\t\t} );\n\n\t\treturn new AnimationClip( rawClip.name, - 1, tracks );\n\n\t}\n\n\tgenerateTracks( rawTracks ) {\n\n\t\tconst tracks = [];\n\n\t\tlet initialPosition = new Vector3();\n\t\tlet initialRotation = new Quaternion();\n\t\tlet initialScale = new Vector3();\n\n\t\tif ( rawTracks.transform ) rawTracks.transform.decompose( initialPosition, initialRotation, initialScale );\n\n\t\tinitialPosition = initialPosition.toArray();\n\t\tinitialRotation = new Euler().setFromQuaternion( initialRotation, rawTracks.eulerOrder ).toArray();\n\t\tinitialScale = initialScale.toArray();\n\n\t\tif ( rawTracks.T !== undefined && Object.keys( rawTracks.T.curves ).length > 0 ) {\n\n\t\t\tconst positionTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.T.curves, initialPosition, 'position' );\n\t\t\tif ( positionTrack !== undefined ) tracks.push( positionTrack );\n\n\t\t}\n\n\t\tif ( rawTracks.R !== undefined && Object.keys( rawTracks.R.curves ).length > 0 ) {\n\n\t\t\tconst rotationTrack = this.generateRotationTrack( rawTracks.modelName, rawTracks.R.curves, initialRotation, rawTracks.preRotation, rawTracks.postRotation, rawTracks.eulerOrder );\n\t\t\tif ( rotationTrack !== undefined ) tracks.push( rotationTrack );\n\n\t\t}\n\n\t\tif ( rawTracks.S !== undefined && Object.keys( rawTracks.S.curves ).length > 0 ) {\n\n\t\t\tconst scaleTrack = this.generateVectorTrack( rawTracks.modelName, rawTracks.S.curves, initialScale, 'scale' );\n\t\t\tif ( scaleTrack !== undefined ) tracks.push( scaleTrack );\n\n\t\t}\n\n\t\tif ( rawTracks.DeformPercent !== undefined ) {\n\n\t\t\tconst morphTrack = this.generateMorphTrack( rawTracks );\n\t\t\tif ( morphTrack !== undefined ) tracks.push( morphTrack );\n\n\t\t}\n\n\t\treturn tracks;\n\n\t}\n\n\tgenerateVectorTrack( modelName, curves, initialValue, type ) {\n\n\t\tconst times = this.getTimesForAllAxes( curves );\n\t\tconst values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\treturn new VectorKeyframeTrack( modelName + '.' + type, times, values );\n\n\t}\n\n\tgenerateRotationTrack( modelName, curves, initialValue, preRotation, postRotation, eulerOrder ) {\n\n\t\tif ( curves.x !== undefined ) {\n\n\t\t\tthis.interpolateRotations( curves.x );\n\t\t\tcurves.x.values = curves.x.values.map( MathUtils.degToRad );\n\n\t\t}\n\n\t\tif ( curves.y !== undefined ) {\n\n\t\t\tthis.interpolateRotations( curves.y );\n\t\t\tcurves.y.values = curves.y.values.map( MathUtils.degToRad );\n\n\t\t}\n\n\t\tif ( curves.z !== undefined ) {\n\n\t\t\tthis.interpolateRotations( curves.z );\n\t\t\tcurves.z.values = curves.z.values.map( MathUtils.degToRad );\n\n\t\t}\n\n\t\tconst times = this.getTimesForAllAxes( curves );\n\t\tconst values = this.getKeyframeTrackValues( times, curves, initialValue );\n\n\t\tif ( preRotation !== undefined ) {\n\n\t\t\tpreRotation = preRotation.map( MathUtils.degToRad );\n\t\t\tpreRotation.push( eulerOrder );\n\n\t\t\tpreRotation = new Euler().fromArray( preRotation );\n\t\t\tpreRotation = new Quaternion().setFromEuler( preRotation );\n\n\t\t}\n\n\t\tif ( postRotation !== undefined ) {\n\n\t\t\tpostRotation = postRotation.map( MathUtils.degToRad );\n\t\t\tpostRotation.push( eulerOrder );\n\n\t\t\tpostRotation = new Euler().fromArray( postRotation );\n\t\t\tpostRotation = new Quaternion().setFromEuler( postRotation ).invert();\n\n\t\t}\n\n\t\tconst quaternion = new Quaternion();\n\t\tconst euler = new Euler();\n\n\t\tconst quaternionValues = [];\n\n\t\tfor ( let i = 0; i < values.length; i += 3 ) {\n\n\t\t\teuler.set( values[ i ], values[ i + 1 ], values[ i + 2 ], eulerOrder );\n\n\t\t\tquaternion.setFromEuler( euler );\n\n\t\t\tif ( preRotation !== undefined ) quaternion.premultiply( preRotation );\n\t\t\tif ( postRotation !== undefined ) quaternion.multiply( postRotation );\n\n\t\t\tquaternion.toArray( quaternionValues, ( i / 3 ) * 4 );\n\n\t\t}\n\n\t\treturn new QuaternionKeyframeTrack( modelName + '.quaternion', times, quaternionValues );\n\n\t}\n\n\tgenerateMorphTrack( rawTracks ) {\n\n\t\tconst curves = rawTracks.DeformPercent.curves.morph;\n\t\tconst values = curves.values.map( function ( val ) {\n\n\t\t\treturn val / 100;\n\n\t\t} );\n\n\t\tconst morphNum = sceneGraph.getObjectByName( rawTracks.modelName ).morphTargetDictionary[ rawTracks.morphName ];\n\n\t\treturn new NumberKeyframeTrack( rawTracks.modelName + '.morphTargetInfluences[' + morphNum + ']', curves.times, values );\n\n\t}\n\n\t// For all animated objects, times are defined separately for each axis\n\t// Here we'll combine the times into one sorted array without duplicates\n\tgetTimesForAllAxes( curves ) {\n\n\t\tlet times = [];\n\n\t\t// first join together the times for each axis, if defined\n\t\tif ( curves.x !== undefined ) times = times.concat( curves.x.times );\n\t\tif ( curves.y !== undefined ) times = times.concat( curves.y.times );\n\t\tif ( curves.z !== undefined ) times = times.concat( curves.z.times );\n\n\t\t// then sort them\n\t\ttimes = times.sort( function ( a, b ) {\n\n\t\t\treturn a - b;\n\n\t\t} );\n\n\t\t// and remove duplicates\n\t\tif ( times.length > 1 ) {\n\n\t\t\tlet targetIndex = 1;\n\t\t\tlet lastValue = times[ 0 ];\n\t\t\tfor ( let i = 1; i < times.length; i ++ ) {\n\n\t\t\t\tconst currentValue = times[ i ];\n\t\t\t\tif ( currentValue !== lastValue ) {\n\n\t\t\t\t\ttimes[ targetIndex ] = currentValue;\n\t\t\t\t\tlastValue = currentValue;\n\t\t\t\t\ttargetIndex ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttimes = times.slice( 0, targetIndex );\n\n\t\t}\n\n\t\treturn times;\n\n\t}\n\n\tgetKeyframeTrackValues( times, curves, initialValue ) {\n\n\t\tconst prevValue = initialValue;\n\n\t\tconst values = [];\n\n\t\tlet xIndex = - 1;\n\t\tlet yIndex = - 1;\n\t\tlet zIndex = - 1;\n\n\t\ttimes.forEach( function ( time ) {\n\n\t\t\tif ( curves.x ) xIndex = curves.x.times.indexOf( time );\n\t\t\tif ( curves.y ) yIndex = curves.y.times.indexOf( time );\n\t\t\tif ( curves.z ) zIndex = curves.z.times.indexOf( time );\n\n\t\t\t// if there is an x value defined for this frame, use that\n\t\t\tif ( xIndex !== - 1 ) {\n\n\t\t\t\tconst xValue = curves.x.values[ xIndex ];\n\t\t\t\tvalues.push( xValue );\n\t\t\t\tprevValue[ 0 ] = xValue;\n\n\t\t\t} else {\n\n\t\t\t\t// otherwise use the x value from the previous frame\n\t\t\t\tvalues.push( prevValue[ 0 ] );\n\n\t\t\t}\n\n\t\t\tif ( yIndex !== - 1 ) {\n\n\t\t\t\tconst yValue = curves.y.values[ yIndex ];\n\t\t\t\tvalues.push( yValue );\n\t\t\t\tprevValue[ 1 ] = yValue;\n\n\t\t\t} else {\n\n\t\t\t\tvalues.push( prevValue[ 1 ] );\n\n\t\t\t}\n\n\t\t\tif ( zIndex !== - 1 ) {\n\n\t\t\t\tconst zValue = curves.z.values[ zIndex ];\n\t\t\t\tvalues.push( zValue );\n\t\t\t\tprevValue[ 2 ] = zValue;\n\n\t\t\t} else {\n\n\t\t\t\tvalues.push( prevValue[ 2 ] );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn values;\n\n\t}\n\n\t// Rotations are defined as Euler angles which can have values  of any size\n\t// These will be converted to quaternions which don't support values greater than\n\t// PI, so we'll interpolate large rotations\n\tinterpolateRotations( curve ) {\n\n\t\tfor ( let i = 1; i < curve.values.length; i ++ ) {\n\n\t\t\tconst initialValue = curve.values[ i - 1 ];\n\t\t\tconst valuesSpan = curve.values[ i ] - initialValue;\n\n\t\t\tconst absoluteSpan = Math.abs( valuesSpan );\n\n\t\t\tif ( absoluteSpan >= 180 ) {\n\n\t\t\t\tconst numSubIntervals = absoluteSpan / 180;\n\n\t\t\t\tconst step = valuesSpan / numSubIntervals;\n\t\t\t\tlet nextValue = initialValue + step;\n\n\t\t\t\tconst initialTime = curve.times[ i - 1 ];\n\t\t\t\tconst timeSpan = curve.times[ i ] - initialTime;\n\t\t\t\tconst interval = timeSpan / numSubIntervals;\n\t\t\t\tlet nextTime = initialTime + interval;\n\n\t\t\t\tconst interpolatedTimes = [];\n\t\t\t\tconst interpolatedValues = [];\n\n\t\t\t\twhile ( nextTime < curve.times[ i ] ) {\n\n\t\t\t\t\tinterpolatedTimes.push( nextTime );\n\t\t\t\t\tnextTime += interval;\n\n\t\t\t\t\tinterpolatedValues.push( nextValue );\n\t\t\t\t\tnextValue += step;\n\n\t\t\t\t}\n\n\t\t\t\tcurve.times = inject( curve.times, i, interpolatedTimes );\n\t\t\t\tcurve.values = inject( curve.values, i, interpolatedValues );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\n// parse an FBX file in ASCII format\nclass TextParser {\n\n\tgetPrevNode() {\n\n\t\treturn this.nodeStack[ this.currentIndent - 2 ];\n\n\t}\n\n\tgetCurrentNode() {\n\n\t\treturn this.nodeStack[ this.currentIndent - 1 ];\n\n\t}\n\n\tgetCurrentProp() {\n\n\t\treturn this.currentProp;\n\n\t}\n\n\tpushStack( node ) {\n\n\t\tthis.nodeStack.push( node );\n\t\tthis.currentIndent += 1;\n\n\t}\n\n\tpopStack() {\n\n\t\tthis.nodeStack.pop();\n\t\tthis.currentIndent -= 1;\n\n\t}\n\n\tsetCurrentProp( val, name ) {\n\n\t\tthis.currentProp = val;\n\t\tthis.currentPropName = name;\n\n\t}\n\n\tparse( text ) {\n\n\t\tthis.currentIndent = 0;\n\n\t\tthis.allNodes = new FBXTree();\n\t\tthis.nodeStack = [];\n\t\tthis.currentProp = [];\n\t\tthis.currentPropName = '';\n\n\t\tconst scope = this;\n\n\t\tconst split = text.split( /[\\r\\n]+/ );\n\n\t\tsplit.forEach( function ( line, i ) {\n\n\t\t\tconst matchComment = line.match( /^[\\s\\t]*;/ );\n\t\t\tconst matchEmpty = line.match( /^[\\s\\t]*$/ );\n\n\t\t\tif ( matchComment || matchEmpty ) return;\n\n\t\t\tconst matchBeginning = line.match( '^\\\\t{' + scope.currentIndent + '}(\\\\w+):(.*){', '' );\n\t\t\tconst matchProperty = line.match( '^\\\\t{' + ( scope.currentIndent ) + '}(\\\\w+):[\\\\s\\\\t\\\\r\\\\n](.*)' );\n\t\t\tconst matchEnd = line.match( '^\\\\t{' + ( scope.currentIndent - 1 ) + '}}' );\n\n\t\t\tif ( matchBeginning ) {\n\n\t\t\t\tscope.parseNodeBegin( line, matchBeginning );\n\n\t\t\t} else if ( matchProperty ) {\n\n\t\t\t\tscope.parseNodeProperty( line, matchProperty, split[ ++ i ] );\n\n\t\t\t} else if ( matchEnd ) {\n\n\t\t\t\tscope.popStack();\n\n\t\t\t} else if ( line.match( /^[^\\s\\t}]/ ) ) {\n\n\t\t\t\t// large arrays are split over multiple lines terminated with a ',' character\n\t\t\t\t// if this is encountered the line needs to be joined to the previous line\n\t\t\t\tscope.parseNodePropertyContinued( line );\n\n\t\t\t}\n\n\t\t} );\n\n\t\treturn this.allNodes;\n\n\t}\n\n\tparseNodeBegin( line, property ) {\n\n\t\tconst nodeName = property[ 1 ].trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\tconst nodeAttrs = property[ 2 ].split( ',' ).map( function ( attr ) {\n\n\t\t\treturn attr.trim().replace( /^\"/, '' ).replace( /\"$/, '' );\n\n\t\t} );\n\n\t\tconst node = { name: nodeName };\n\t\tconst attrs = this.parseNodeAttr( nodeAttrs );\n\n\t\tconst currentNode = this.getCurrentNode();\n\n\t\t// a top node\n\t\tif ( this.currentIndent === 0 ) {\n\n\t\t\tthis.allNodes.add( nodeName, node );\n\n\t\t} else { // a subnode\n\n\t\t\t// if the subnode already exists, append it\n\t\t\tif ( nodeName in currentNode ) {\n\n\t\t\t\t// special case Pose needs PoseNodes as an array\n\t\t\t\tif ( nodeName === 'PoseNode' ) {\n\n\t\t\t\t\tcurrentNode.PoseNode.push( node );\n\n\t\t\t\t} else if ( currentNode[ nodeName ].id !== undefined ) {\n\n\t\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\t\tcurrentNode[ nodeName ][ currentNode[ nodeName ].id ] = currentNode[ nodeName ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( attrs.id !== '' ) currentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t} else if ( typeof attrs.id === 'number' ) {\n\n\t\t\t\tcurrentNode[ nodeName ] = {};\n\t\t\t\tcurrentNode[ nodeName ][ attrs.id ] = node;\n\n\t\t\t} else if ( nodeName !== 'Properties70' ) {\n\n\t\t\t\tif ( nodeName === 'PoseNode' )\tcurrentNode[ nodeName ] = [ node ];\n\t\t\t\telse currentNode[ nodeName ] = node;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( typeof attrs.id === 'number' ) node.id = attrs.id;\n\t\tif ( attrs.name !== '' ) node.attrName = attrs.name;\n\t\tif ( attrs.type !== '' ) node.attrType = attrs.type;\n\n\t\tthis.pushStack( node );\n\n\t}\n\n\tparseNodeAttr( attrs ) {\n\n\t\tlet id = attrs[ 0 ];\n\n\t\tif ( attrs[ 0 ] !== '' ) {\n\n\t\t\tid = parseInt( attrs[ 0 ] );\n\n\t\t\tif ( isNaN( id ) ) {\n\n\t\t\t\tid = attrs[ 0 ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet name = '', type = '';\n\n\t\tif ( attrs.length > 1 ) {\n\n\t\t\tname = attrs[ 1 ].replace( /^(\\w+)::/, '' );\n\t\t\ttype = attrs[ 2 ];\n\n\t\t}\n\n\t\treturn { id: id, name: name, type: type };\n\n\t}\n\n\tparseNodeProperty( line, property, contentLine ) {\n\n\t\tlet propName = property[ 1 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\t\tlet propValue = property[ 2 ].replace( /^\"/, '' ).replace( /\"$/, '' ).trim();\n\n\t\t// for special case: base64 image data follows \"Content: ,\" line\n\t\t//\tContent: ,\n\t\t//\t \"/9j/4RDaRXhpZgAATU0A...\"\n\t\tif ( propName === 'Content' && propValue === ',' ) {\n\n\t\t\tpropValue = contentLine.replace( /\"/g, '' ).replace( /,$/, '' ).trim();\n\n\t\t}\n\n\t\tconst currentNode = this.getCurrentNode();\n\t\tconst parentName = currentNode.name;\n\n\t\tif ( parentName === 'Properties70' ) {\n\n\t\t\tthis.parseNodeSpecialProperty( line, propName, propValue );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Connections\n\t\tif ( propName === 'C' ) {\n\n\t\t\tconst connProps = propValue.split( ',' ).slice( 1 );\n\t\t\tconst from = parseInt( connProps[ 0 ] );\n\t\t\tconst to = parseInt( connProps[ 1 ] );\n\n\t\t\tlet rest = propValue.split( ',' ).slice( 3 );\n\n\t\t\trest = rest.map( function ( elem ) {\n\n\t\t\t\treturn elem.trim().replace( /^\"/, '' );\n\n\t\t\t} );\n\n\t\t\tpropName = 'connections';\n\t\t\tpropValue = [ from, to ];\n\t\t\tappend( propValue, rest );\n\n\t\t\tif ( currentNode[ propName ] === undefined ) {\n\n\t\t\t\tcurrentNode[ propName ] = [];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Node\n\t\tif ( propName === 'Node' ) currentNode.id = propValue;\n\n\t\t// connections\n\t\tif ( propName in currentNode && Array.isArray( currentNode[ propName ] ) ) {\n\n\t\t\tcurrentNode[ propName ].push( propValue );\n\n\t\t} else {\n\n\t\t\tif ( propName !== 'a' ) currentNode[ propName ] = propValue;\n\t\t\telse currentNode.a = propValue;\n\n\t\t}\n\n\t\tthis.setCurrentProp( currentNode, propName );\n\n\t\t// convert string to array, unless it ends in ',' in which case more will be added to it\n\t\tif ( propName === 'a' && propValue.slice( - 1 ) !== ',' ) {\n\n\t\t\tcurrentNode.a = parseNumberArray( propValue );\n\n\t\t}\n\n\t}\n\n\tparseNodePropertyContinued( line ) {\n\n\t\tconst currentNode = this.getCurrentNode();\n\n\t\tcurrentNode.a += line;\n\n\t\t// if the line doesn't end in ',' we have reached the end of the property value\n\t\t// so convert the string to an array\n\t\tif ( line.slice( - 1 ) !== ',' ) {\n\n\t\t\tcurrentNode.a = parseNumberArray( currentNode.a );\n\n\t\t}\n\n\t}\n\n\t// parse \"Property70\"\n\tparseNodeSpecialProperty( line, propName, propValue ) {\n\n\t\t// split this\n\t\t// P: \"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\",1,1,1\n\t\t// into array like below\n\t\t// [\"Lcl Scaling\", \"Lcl Scaling\", \"\", \"A\", \"1,1,1\" ]\n\t\tconst props = propValue.split( '\",' ).map( function ( prop ) {\n\n\t\t\treturn prop.trim().replace( /^\\\"/, '' ).replace( /\\s/, '_' );\n\n\t\t} );\n\n\t\tconst innerPropName = props[ 0 ];\n\t\tconst innerPropType1 = props[ 1 ];\n\t\tconst innerPropType2 = props[ 2 ];\n\t\tconst innerPropFlag = props[ 3 ];\n\t\tlet innerPropValue = props[ 4 ];\n\n\t\t// cast values where needed, otherwise leave as strings\n\t\tswitch ( innerPropType1 ) {\n\n\t\t\tcase 'int':\n\t\t\tcase 'enum':\n\t\t\tcase 'bool':\n\t\t\tcase 'ULongLong':\n\t\t\tcase 'double':\n\t\t\tcase 'Number':\n\t\t\tcase 'FieldOfView':\n\t\t\t\tinnerPropValue = parseFloat( innerPropValue );\n\t\t\t\tbreak;\n\n\t\t\tcase 'Color':\n\t\t\tcase 'ColorRGB':\n\t\t\tcase 'Vector3D':\n\t\t\tcase 'Lcl_Translation':\n\t\t\tcase 'Lcl_Rotation':\n\t\t\tcase 'Lcl_Scaling':\n\t\t\t\tinnerPropValue = parseNumberArray( innerPropValue );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// CAUTION: these props must append to parent's parent\n\t\tthis.getPrevNode()[ innerPropName ] = {\n\n\t\t\t'type': innerPropType1,\n\t\t\t'type2': innerPropType2,\n\t\t\t'flag': innerPropFlag,\n\t\t\t'value': innerPropValue\n\n\t\t};\n\n\t\tthis.setCurrentProp( this.getPrevNode(), innerPropName );\n\n\t}\n\n}\n\n// Parse an FBX file in Binary format\nclass BinaryParser {\n\n\tparse( buffer ) {\n\n\t\tconst reader = new BinaryReader( buffer );\n\t\treader.skip( 23 ); // skip magic 23 bytes\n\n\t\tconst version = reader.getUint32();\n\n\t\tif ( version < 6400 ) {\n\n\t\t\tthrow new Error( 'THREE.FBXLoader: FBX version not supported, FileVersion: ' + version );\n\n\t\t}\n\n\t\tconst allNodes = new FBXTree();\n\n\t\twhile ( ! this.endOfContent( reader ) ) {\n\n\t\t\tconst node = this.parseNode( reader, version );\n\t\t\tif ( node !== null ) allNodes.add( node.name, node );\n\n\t\t}\n\n\t\treturn allNodes;\n\n\t}\n\n\t// Check if reader has reached the end of content.\n\tendOfContent( reader ) {\n\n\t\t// footer size: 160bytes + 16-byte alignment padding\n\t\t// - 16bytes: magic\n\t\t// - padding til 16-byte alignment (at least 1byte?)\n\t\t//\t(seems like some exporters embed fixed 15 or 16bytes?)\n\t\t// - 4bytes: magic\n\t\t// - 4bytes: version\n\t\t// - 120bytes: zero\n\t\t// - 16bytes: magic\n\t\tif ( reader.size() % 16 === 0 ) {\n\n\t\t\treturn ( ( reader.getOffset() + 160 + 16 ) & ~ 0xf ) >= reader.size();\n\n\t\t} else {\n\n\t\t\treturn reader.getOffset() + 160 + 16 >= reader.size();\n\n\t\t}\n\n\t}\n\n\t// recursively parse nodes until the end of the file is reached\n\tparseNode( reader, version ) {\n\n\t\tconst node = {};\n\n\t\t// The first three data sizes depends on version.\n\t\tconst endOffset = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\t\tconst numProperties = ( version >= 7500 ) ? reader.getUint64() : reader.getUint32();\n\n\t\t( version >= 7500 ) ? reader.getUint64() : reader.getUint32(); // the returned propertyListLen is not used\n\n\t\tconst nameLen = reader.getUint8();\n\t\tconst name = reader.getString( nameLen );\n\n\t\t// Regards this node as NULL-record if endOffset is zero\n\t\tif ( endOffset === 0 ) return null;\n\n\t\tconst propertyList = [];\n\n\t\tfor ( let i = 0; i < numProperties; i ++ ) {\n\n\t\t\tpropertyList.push( this.parseProperty( reader ) );\n\n\t\t}\n\n\t\t// Regards the first three elements in propertyList as id, attrName, and attrType\n\t\tconst id = propertyList.length > 0 ? propertyList[ 0 ] : '';\n\t\tconst attrName = propertyList.length > 1 ? propertyList[ 1 ] : '';\n\t\tconst attrType = propertyList.length > 2 ? propertyList[ 2 ] : '';\n\n\t\t// check if this node represents just a single property\n\t\t// like (name, 0) set or (name2, [0, 1, 2]) set of {name: 0, name2: [0, 1, 2]}\n\t\tnode.singleProperty = ( numProperties === 1 && reader.getOffset() === endOffset ) ? true : false;\n\n\t\twhile ( endOffset > reader.getOffset() ) {\n\n\t\t\tconst subNode = this.parseNode( reader, version );\n\n\t\t\tif ( subNode !== null ) this.parseSubNode( name, node, subNode );\n\n\t\t}\n\n\t\tnode.propertyList = propertyList; // raw property list used by parent\n\n\t\tif ( typeof id === 'number' ) node.id = id;\n\t\tif ( attrName !== '' ) node.attrName = attrName;\n\t\tif ( attrType !== '' ) node.attrType = attrType;\n\t\tif ( name !== '' ) node.name = name;\n\n\t\treturn node;\n\n\t}\n\n\tparseSubNode( name, node, subNode ) {\n\n\t\t// special case: child node is single property\n\t\tif ( subNode.singleProperty === true ) {\n\n\t\t\tconst value = subNode.propertyList[ 0 ];\n\n\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t\tsubNode.a = value;\n\n\t\t\t} else {\n\n\t\t\t\tnode[ subNode.name ] = value;\n\n\t\t\t}\n\n\t\t} else if ( name === 'Connections' && subNode.name === 'C' ) {\n\n\t\t\tconst array = [];\n\n\t\t\tsubNode.propertyList.forEach( function ( property, i ) {\n\n\t\t\t\t// first Connection is FBX type (OO, OP, etc.). We'll discard these\n\t\t\t\tif ( i !== 0 ) array.push( property );\n\n\t\t\t} );\n\n\t\t\tif ( node.connections === undefined ) {\n\n\t\t\t\tnode.connections = [];\n\n\t\t\t}\n\n\t\t\tnode.connections.push( array );\n\n\t\t} else if ( subNode.name === 'Properties70' ) {\n\n\t\t\tconst keys = Object.keys( subNode );\n\n\t\t\tkeys.forEach( function ( key ) {\n\n\t\t\t\tnode[ key ] = subNode[ key ];\n\n\t\t\t} );\n\n\t\t} else if ( name === 'Properties70' && subNode.name === 'P' ) {\n\n\t\t\tlet innerPropName = subNode.propertyList[ 0 ];\n\t\t\tlet innerPropType1 = subNode.propertyList[ 1 ];\n\t\t\tconst innerPropType2 = subNode.propertyList[ 2 ];\n\t\t\tconst innerPropFlag = subNode.propertyList[ 3 ];\n\t\t\tlet innerPropValue;\n\n\t\t\tif ( innerPropName.indexOf( 'Lcl ' ) === 0 ) innerPropName = innerPropName.replace( 'Lcl ', 'Lcl_' );\n\t\t\tif ( innerPropType1.indexOf( 'Lcl ' ) === 0 ) innerPropType1 = innerPropType1.replace( 'Lcl ', 'Lcl_' );\n\n\t\t\tif ( innerPropType1 === 'Color' || innerPropType1 === 'ColorRGB' || innerPropType1 === 'Vector' || innerPropType1 === 'Vector3D' || innerPropType1.indexOf( 'Lcl_' ) === 0 ) {\n\n\t\t\t\tinnerPropValue = [\n\t\t\t\t\tsubNode.propertyList[ 4 ],\n\t\t\t\t\tsubNode.propertyList[ 5 ],\n\t\t\t\t\tsubNode.propertyList[ 6 ]\n\t\t\t\t];\n\n\t\t\t} else {\n\n\t\t\t\tinnerPropValue = subNode.propertyList[ 4 ];\n\n\t\t\t}\n\n\t\t\t// this will be copied to parent, see above\n\t\t\tnode[ innerPropName ] = {\n\n\t\t\t\t'type': innerPropType1,\n\t\t\t\t'type2': innerPropType2,\n\t\t\t\t'flag': innerPropFlag,\n\t\t\t\t'value': innerPropValue\n\n\t\t\t};\n\n\t\t} else if ( node[ subNode.name ] === undefined ) {\n\n\t\t\tif ( typeof subNode.id === 'number' ) {\n\n\t\t\t\tnode[ subNode.name ] = {};\n\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t} else {\n\n\t\t\t\tnode[ subNode.name ] = subNode;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( subNode.name === 'PoseNode' ) {\n\n\t\t\t\tif ( ! Array.isArray( node[ subNode.name ] ) ) {\n\n\t\t\t\t\tnode[ subNode.name ] = [ node[ subNode.name ] ];\n\n\t\t\t\t}\n\n\t\t\t\tnode[ subNode.name ].push( subNode );\n\n\t\t\t} else if ( node[ subNode.name ][ subNode.id ] === undefined ) {\n\n\t\t\t\tnode[ subNode.name ][ subNode.id ] = subNode;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tparseProperty( reader ) {\n\n\t\tconst type = reader.getString( 1 );\n\t\tlet length;\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 'C':\n\t\t\t\treturn reader.getBoolean();\n\n\t\t\tcase 'D':\n\t\t\t\treturn reader.getFloat64();\n\n\t\t\tcase 'F':\n\t\t\t\treturn reader.getFloat32();\n\n\t\t\tcase 'I':\n\t\t\t\treturn reader.getInt32();\n\n\t\t\tcase 'L':\n\t\t\t\treturn reader.getInt64();\n\n\t\t\tcase 'R':\n\t\t\t\tlength = reader.getUint32();\n\t\t\t\treturn reader.getArrayBuffer( length );\n\n\t\t\tcase 'S':\n\t\t\t\tlength = reader.getUint32();\n\t\t\t\treturn reader.getString( length );\n\n\t\t\tcase 'Y':\n\t\t\t\treturn reader.getInt16();\n\n\t\t\tcase 'b':\n\t\t\tcase 'c':\n\t\t\tcase 'd':\n\t\t\tcase 'f':\n\t\t\tcase 'i':\n\t\t\tcase 'l':\n\n\t\t\t\tconst arrayLength = reader.getUint32();\n\t\t\t\tconst encoding = reader.getUint32(); // 0: non-compressed, 1: compressed\n\t\t\t\tconst compressedLength = reader.getUint32();\n\n\t\t\t\tif ( encoding === 0 ) {\n\n\t\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\treturn reader.getBooleanArray( arrayLength );\n\n\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\treturn reader.getFloat64Array( arrayLength );\n\n\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\treturn reader.getFloat32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'i':\n\t\t\t\t\t\t\treturn reader.getInt32Array( arrayLength );\n\n\t\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t\treturn reader.getInt64Array( arrayLength );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst data = fflate.unzlibSync( new Uint8Array( reader.getArrayBuffer( compressedLength ) ) );\n\t\t\t\tconst reader2 = new BinaryReader( data.buffer );\n\n\t\t\t\tswitch ( type ) {\n\n\t\t\t\t\tcase 'b':\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\treturn reader2.getBooleanArray( arrayLength );\n\n\t\t\t\t\tcase 'd':\n\t\t\t\t\t\treturn reader2.getFloat64Array( arrayLength );\n\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\treturn reader2.getFloat32Array( arrayLength );\n\n\t\t\t\t\tcase 'i':\n\t\t\t\t\t\treturn reader2.getInt32Array( arrayLength );\n\n\t\t\t\t\tcase 'l':\n\t\t\t\t\t\treturn reader2.getInt64Array( arrayLength );\n\n\t\t\t\t}\n\n\t\t\t\tbreak; // cannot happen but is required by the DeepScan\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'THREE.FBXLoader: Unknown property type ' + type );\n\n\t\t}\n\n\t}\n\n}\n\nclass BinaryReader {\n\n\tconstructor( buffer, littleEndian ) {\n\n\t\tthis.dv = new DataView( buffer );\n\t\tthis.offset = 0;\n\t\tthis.littleEndian = ( littleEndian !== undefined ) ? littleEndian : true;\n\t\tthis._textDecoder = new TextDecoder();\n\n\t}\n\n\tgetOffset() {\n\n\t\treturn this.offset;\n\n\t}\n\n\tsize() {\n\n\t\treturn this.dv.buffer.byteLength;\n\n\t}\n\n\tskip( length ) {\n\n\t\tthis.offset += length;\n\n\t}\n\n\t// seems like true/false representation depends on exporter.\n\t// true: 1 or 'Y'(=0x59), false: 0 or 'T'(=0x54)\n\t// then sees LSB.\n\tgetBoolean() {\n\n\t\treturn ( this.getUint8() & 1 ) === 1;\n\n\t}\n\n\tgetBooleanArray( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getBoolean() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetUint8() {\n\n\t\tconst value = this.dv.getUint8( this.offset );\n\t\tthis.offset += 1;\n\t\treturn value;\n\n\t}\n\n\tgetInt16() {\n\n\t\tconst value = this.dv.getInt16( this.offset, this.littleEndian );\n\t\tthis.offset += 2;\n\t\treturn value;\n\n\t}\n\n\tgetInt32() {\n\n\t\tconst value = this.dv.getInt32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t}\n\n\tgetInt32Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getInt32() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetUint32() {\n\n\t\tconst value = this.dv.getUint32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t}\n\n\t// JavaScript doesn't support 64-bit integer so calculate this here\n\t// 1 << 32 will return 1 so using multiply operation instead here.\n\t// There's a possibility that this method returns wrong value if the value\n\t// is out of the range between Number.MAX_SAFE_INTEGER and Number.MIN_SAFE_INTEGER.\n\t// TODO: safely handle 64-bit integer\n\tgetInt64() {\n\n\t\tlet low, high;\n\n\t\tif ( this.littleEndian ) {\n\n\t\t\tlow = this.getUint32();\n\t\t\thigh = this.getUint32();\n\n\t\t} else {\n\n\t\t\thigh = this.getUint32();\n\t\t\tlow = this.getUint32();\n\n\t\t}\n\n\t\t// calculate negative value\n\t\tif ( high & 0x80000000 ) {\n\n\t\t\thigh = ~ high & 0xFFFFFFFF;\n\t\t\tlow = ~ low & 0xFFFFFFFF;\n\n\t\t\tif ( low === 0xFFFFFFFF ) high = ( high + 1 ) & 0xFFFFFFFF;\n\n\t\t\tlow = ( low + 1 ) & 0xFFFFFFFF;\n\n\t\t\treturn - ( high * 0x100000000 + low );\n\n\t\t}\n\n\t\treturn high * 0x100000000 + low;\n\n\t}\n\n\tgetInt64Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getInt64() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\t// Note: see getInt64() comment\n\tgetUint64() {\n\n\t\tlet low, high;\n\n\t\tif ( this.littleEndian ) {\n\n\t\t\tlow = this.getUint32();\n\t\t\thigh = this.getUint32();\n\n\t\t} else {\n\n\t\t\thigh = this.getUint32();\n\t\t\tlow = this.getUint32();\n\n\t\t}\n\n\t\treturn high * 0x100000000 + low;\n\n\t}\n\n\tgetFloat32() {\n\n\t\tconst value = this.dv.getFloat32( this.offset, this.littleEndian );\n\t\tthis.offset += 4;\n\t\treturn value;\n\n\t}\n\n\tgetFloat32Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getFloat32() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetFloat64() {\n\n\t\tconst value = this.dv.getFloat64( this.offset, this.littleEndian );\n\t\tthis.offset += 8;\n\t\treturn value;\n\n\t}\n\n\tgetFloat64Array( size ) {\n\n\t\tconst a = [];\n\n\t\tfor ( let i = 0; i < size; i ++ ) {\n\n\t\t\ta.push( this.getFloat64() );\n\n\t\t}\n\n\t\treturn a;\n\n\t}\n\n\tgetArrayBuffer( size ) {\n\n\t\tconst value = this.dv.buffer.slice( this.offset, this.offset + size );\n\t\tthis.offset += size;\n\t\treturn value;\n\n\t}\n\n\tgetString( size ) {\n\n\t\tconst start = this.offset;\n\t\tlet a = new Uint8Array( this.dv.buffer, start, size );\n\n\t\tthis.skip( size );\n\n\t\tconst nullByte = a.indexOf( 0 );\n\t\tif ( nullByte >= 0 ) a = new Uint8Array( this.dv.buffer, start, nullByte );\n\n\t\treturn this._textDecoder.decode( a );\n\n\t}\n\n}\n\n// FBXTree holds a representation of the FBX data, returned by the TextParser ( FBX ASCII format)\n// and BinaryParser( FBX Binary format)\nclass FBXTree {\n\n\tadd( key, val ) {\n\n\t\tthis[ key ] = val;\n\n\t}\n\n}\n\n// ************** UTILITY FUNCTIONS **************\n\nfunction isFbxFormatBinary( buffer ) {\n\n\tconst CORRECT = 'Kaydara\\u0020FBX\\u0020Binary\\u0020\\u0020\\0';\n\n\treturn buffer.byteLength >= CORRECT.length && CORRECT === convertArrayBufferToString( buffer, 0, CORRECT.length );\n\n}\n\nfunction isFbxFormatASCII( text ) {\n\n\tconst CORRECT = [ 'K', 'a', 'y', 'd', 'a', 'r', 'a', '\\\\', 'F', 'B', 'X', '\\\\', 'B', 'i', 'n', 'a', 'r', 'y', '\\\\', '\\\\' ];\n\n\tlet cursor = 0;\n\n\tfunction read( offset ) {\n\n\t\tconst result = text[ offset - 1 ];\n\t\ttext = text.slice( cursor + offset );\n\t\tcursor ++;\n\t\treturn result;\n\n\t}\n\n\tfor ( let i = 0; i < CORRECT.length; ++ i ) {\n\n\t\tconst num = read( 1 );\n\t\tif ( num === CORRECT[ i ] ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nfunction getFbxVersion( text ) {\n\n\tconst versionRegExp = /FBXVersion: (\\d+)/;\n\tconst match = text.match( versionRegExp );\n\n\tif ( match ) {\n\n\t\tconst version = parseInt( match[ 1 ] );\n\t\treturn version;\n\n\t}\n\n\tthrow new Error( 'THREE.FBXLoader: Cannot find the version number for the file given.' );\n\n}\n\n// Converts FBX ticks into real time seconds.\nfunction convertFBXTimeToSeconds( time ) {\n\n\treturn time / 46186158000;\n\n}\n\nconst dataArray = [];\n\n// extracts the data from the correct position in the FBX array based on indexing type\nfunction getData( polygonVertexIndex, polygonIndex, vertexIndex, infoObject ) {\n\n\tlet index;\n\n\tswitch ( infoObject.mappingType ) {\n\n\t\tcase 'ByPolygonVertex' :\n\t\t\tindex = polygonVertexIndex;\n\t\t\tbreak;\n\t\tcase 'ByPolygon' :\n\t\t\tindex = polygonIndex;\n\t\t\tbreak;\n\t\tcase 'ByVertice' :\n\t\t\tindex = vertexIndex;\n\t\t\tbreak;\n\t\tcase 'AllSame' :\n\t\t\tindex = infoObject.indices[ 0 ];\n\t\t\tbreak;\n\t\tdefault :\n\t\t\tconsole.warn( 'THREE.FBXLoader: unknown attribute mapping type ' + infoObject.mappingType );\n\n\t}\n\n\tif ( infoObject.referenceType === 'IndexToDirect' ) index = infoObject.indices[ index ];\n\n\tconst from = index * infoObject.dataSize;\n\tconst to = from + infoObject.dataSize;\n\n\treturn slice( dataArray, infoObject.buffer, from, to );\n\n}\n\nconst tempEuler = new Euler();\nconst tempVec = new Vector3();\n\n// generate transformation from FBX transform data\n// ref: https://help.autodesk.com/view/FBX/2017/ENU/?guid=__files_GUID_10CDD63C_79C1_4F2D_BB28_AD2BE65A02ED_htm\n// ref: http://docs.autodesk.com/FBX/2014/ENU/FBX-SDK-Documentation/index.html?url=cpp_ref/_transformations_2main_8cxx-example.html,topicNumber=cpp_ref__transformations_2main_8cxx_example_htmlfc10a1e1-b18d-4e72-9dc0-70d0f1959f5e\nfunction generateTransform( transformData ) {\n\n\tconst lTranslationM = new Matrix4();\n\tconst lPreRotationM = new Matrix4();\n\tconst lRotationM = new Matrix4();\n\tconst lPostRotationM = new Matrix4();\n\n\tconst lScalingM = new Matrix4();\n\tconst lScalingPivotM = new Matrix4();\n\tconst lScalingOffsetM = new Matrix4();\n\tconst lRotationOffsetM = new Matrix4();\n\tconst lRotationPivotM = new Matrix4();\n\n\tconst lParentGX = new Matrix4();\n\tconst lParentLX = new Matrix4();\n\tconst lGlobalT = new Matrix4();\n\n\tconst inheritType = ( transformData.inheritType ) ? transformData.inheritType : 0;\n\n\tif ( transformData.translation ) lTranslationM.setPosition( tempVec.fromArray( transformData.translation ) );\n\n\tif ( transformData.preRotation ) {\n\n\t\tconst array = transformData.preRotation.map( MathUtils.degToRad );\n\t\tarray.push( transformData.eulerOrder || Euler.DEFAULT_ORDER );\n\t\tlPreRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t}\n\n\tif ( transformData.rotation ) {\n\n\t\tconst array = transformData.rotation.map( MathUtils.degToRad );\n\t\tarray.push( transformData.eulerOrder || Euler.DEFAULT_ORDER );\n\t\tlRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\n\t}\n\n\tif ( transformData.postRotation ) {\n\n\t\tconst array = transformData.postRotation.map( MathUtils.degToRad );\n\t\tarray.push( transformData.eulerOrder || Euler.DEFAULT_ORDER );\n\t\tlPostRotationM.makeRotationFromEuler( tempEuler.fromArray( array ) );\n\t\tlPostRotationM.invert();\n\n\t}\n\n\tif ( transformData.scale ) lScalingM.scale( tempVec.fromArray( transformData.scale ) );\n\n\t// Pivots and offsets\n\tif ( transformData.scalingOffset ) lScalingOffsetM.setPosition( tempVec.fromArray( transformData.scalingOffset ) );\n\tif ( transformData.scalingPivot ) lScalingPivotM.setPosition( tempVec.fromArray( transformData.scalingPivot ) );\n\tif ( transformData.rotationOffset ) lRotationOffsetM.setPosition( tempVec.fromArray( transformData.rotationOffset ) );\n\tif ( transformData.rotationPivot ) lRotationPivotM.setPosition( tempVec.fromArray( transformData.rotationPivot ) );\n\n\t// parent transform\n\tif ( transformData.parentMatrixWorld ) {\n\n\t\tlParentLX.copy( transformData.parentMatrix );\n\t\tlParentGX.copy( transformData.parentMatrixWorld );\n\n\t}\n\n\tconst lLRM = lPreRotationM.clone().multiply( lRotationM ).multiply( lPostRotationM );\n\t// Global Rotation\n\tconst lParentGRM = new Matrix4();\n\tlParentGRM.extractRotation( lParentGX );\n\n\t// Global Shear*Scaling\n\tconst lParentTM = new Matrix4();\n\tlParentTM.copyPosition( lParentGX );\n\n\tconst lParentGRSM = lParentTM.clone().invert().multiply( lParentGX );\n\tconst lParentGSM = lParentGRM.clone().invert().multiply( lParentGRSM );\n\tconst lLSM = lScalingM;\n\n\tconst lGlobalRS = new Matrix4();\n\n\tif ( inheritType === 0 ) {\n\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM ).multiply( lLSM );\n\n\t} else if ( inheritType === 1 ) {\n\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lParentGSM ).multiply( lLRM ).multiply( lLSM );\n\n\t} else {\n\n\t\tconst lParentLSM = new Matrix4().scale( new Vector3().setFromMatrixScale( lParentLX ) );\n\t\tconst lParentLSM_inv = lParentLSM.clone().invert();\n\t\tconst lParentGSM_noLocal = lParentGSM.clone().multiply( lParentLSM_inv );\n\n\t\tlGlobalRS.copy( lParentGRM ).multiply( lLRM ).multiply( lParentGSM_noLocal ).multiply( lLSM );\n\n\t}\n\n\tconst lRotationPivotM_inv = lRotationPivotM.clone().invert();\n\tconst lScalingPivotM_inv = lScalingPivotM.clone().invert();\n\t// Calculate the local transform matrix\n\tlet lTransform = lTranslationM.clone().multiply( lRotationOffsetM ).multiply( lRotationPivotM ).multiply( lPreRotationM ).multiply( lRotationM ).multiply( lPostRotationM ).multiply( lRotationPivotM_inv ).multiply( lScalingOffsetM ).multiply( lScalingPivotM ).multiply( lScalingM ).multiply( lScalingPivotM_inv );\n\n\tconst lLocalTWithAllPivotAndOffsetInfo = new Matrix4().copyPosition( lTransform );\n\n\tconst lGlobalTranslation = lParentGX.clone().multiply( lLocalTWithAllPivotAndOffsetInfo );\n\tlGlobalT.copyPosition( lGlobalTranslation );\n\n\tlTransform = lGlobalT.clone().multiply( lGlobalRS );\n\n\t// from global to local\n\tlTransform.premultiply( lParentGX.invert() );\n\n\treturn lTransform;\n\n}\n\n// Returns the three.js intrinsic Euler order corresponding to FBX extrinsic Euler order\n// ref: http://help.autodesk.com/view/FBX/2017/ENU/?guid=__cpp_ref_class_fbx_euler_html\nfunction getEulerOrder( order ) {\n\n\torder = order || 0;\n\n\tconst enums = [\n\t\t'ZYX', // -> XYZ extrinsic\n\t\t'YZX', // -> XZY extrinsic\n\t\t'XZY', // -> YZX extrinsic\n\t\t'ZXY', // -> YXZ extrinsic\n\t\t'YXZ', // -> ZXY extrinsic\n\t\t'XYZ', // -> ZYX extrinsic\n\t\t//'SphericXYZ', // not possible to support\n\t];\n\n\tif ( order === 6 ) {\n\n\t\tconsole.warn( 'THREE.FBXLoader: unsupported Euler Order: Spherical XYZ. Animations and rotations may be incorrect.' );\n\t\treturn enums[ 0 ];\n\n\t}\n\n\treturn enums[ order ];\n\n}\n\n// Parses comma separated list of numbers and returns them an array.\n// Used internally by the TextParser\nfunction parseNumberArray( value ) {\n\n\tconst array = value.split( ',' ).map( function ( val ) {\n\n\t\treturn parseFloat( val );\n\n\t} );\n\n\treturn array;\n\n}\n\nfunction convertArrayBufferToString( buffer, from, to ) {\n\n\tif ( from === undefined ) from = 0;\n\tif ( to === undefined ) to = buffer.byteLength;\n\n\treturn new TextDecoder().decode( new Uint8Array( buffer, from, to ) );\n\n}\n\nfunction append( a, b ) {\n\n\tfor ( let i = 0, j = a.length, l = b.length; i < l; i ++, j ++ ) {\n\n\t\ta[ j ] = b[ i ];\n\n\t}\n\n}\n\nfunction slice( a, b, from, to ) {\n\n\tfor ( let i = from, j = 0; i < to; i ++, j ++ ) {\n\n\t\ta[ j ] = b[ i ];\n\n\t}\n\n\treturn a;\n\n}\n\n// inject array a2 into array a1 at index\nfunction inject( a1, index, a2 ) {\n\n\treturn a1.slice( 0, index ).concat( a2 ).concat( a1.slice( index ) );\n\n}\n\nexport { FBXLoader };\n","/*!\nfflate - fast JavaScript compression/decompression\n<https://101arrowz.github.io/fflate>\nLicensed under MIT. https://github.com/101arrowz/fflate/blob/master/LICENSE\nversion 0.6.9\n*/\n\n// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar durl = function (c) { return URL.createObjectURL(new Blob([c], { type: 'text/javascript' })); };\nvar cwk = function (u) { return new Worker(u); };\ntry {\n    URL.revokeObjectURL(durl(''));\n}\ncatch (e) {\n    // We're in Deno or a very old browser\n    durl = function (c) { return 'data:application/javascript;charset=UTF-8,' + encodeURI(c); };\n    // If Deno, this is necessary; if not, this changes nothing\n    cwk = function (u) { return new Worker(u, { type: 'module' }); };\n}\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = cwk(ch2[id] || (ch2[id] = durl(c)));\n    w.onerror = function (e) { return cb(e.error, null); };\n    w.onmessage = function (e) { return cb(null, e.data); };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\n// see fleb note\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new u32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return [b, r];\n};\nvar _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b[0], revfd = _b[1];\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i)\n        ++l[cd[i] - 1];\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 0; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >>> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >>> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p / 8) | 0) + (p & 7 && 1); };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    var n = new (v instanceof u16 ? u16 : v instanceof u32 ? u32 : u8)(e - s);\n    n.set(v.subarray(s, e));\n    return n;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, buf, st) {\n    // source length\n    var sl = dat.length;\n    if (!sl || (st && !st.l && sl < 5))\n        return buf || new u8(0);\n    // have to estimate size\n    var noBuf = !buf || st;\n    // no state\n    var noSt = !st || st.i;\n    if (!st)\n        st = {};\n    // Assumes roughly 33% compression ratio average\n    if (!buf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            st.f = final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        throw 'unexpected EOF';\n                    break;\n                }\n                // ensure size\n                if (noBuf)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >>> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                throw 'invalid block type';\n            if (pos > tbts) {\n                if (noSt)\n                    throw 'unexpected EOF';\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17;\n        if (noBuf)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    throw 'unexpected EOF';\n                break;\n            }\n            if (!c)\n                throw 'invalid length/literal';\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\n                if (!d)\n                    throw 'invalid distance';\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        throw 'unexpected EOF';\n                    break;\n                }\n                if (noBuf)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                for (; bt < end; bt += 4) {\n                    buf[bt] = buf[bt - dt];\n                    buf[bt + 1] = buf[bt + 1 - dt];\n                    buf[bt + 2] = buf[bt + 2 - dt];\n                    buf[bt + 3] = buf[bt + 3 - dt];\n                }\n                bt = end;\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    return bt == buf.length ? buf : slc(buf, 0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n    d[o + 2] |= v >>> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return [et, 0];\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return [v, 1];\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return [new u8(tr), mbt];\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return [cl.subarray(0, cli), s];\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >>> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a[0], mlb = _a[1];\n    var _b = hTree(df, 15), ddt = _b[0], mdb = _b[1];\n    var _c = lc(dlt), lclt = _c[0], nlc = _c[1];\n    var _d = lc(ddt), lcdt = _d[0], ndc = _d[1];\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        lcfreq[lclt[i] & 31]++;\n    for (var i = 0; i < lcdt.length; ++i)\n        lcfreq[lcdt[i] & 31]++;\n    var _e = hTree(lcfreq, 7), lct = _e[0], mlcb = _e[1];\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + (2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18]);\n    if (flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >>> 5) & 127), p += clct[i] >>> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        if (syms[i] > 255) {\n            var len = (syms[i] >>> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (syms[i] >>> 23) & 31), p += fleb[len];\n            var dst = syms[i] & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (syms[i] >>> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[syms[i]]), p += ll[syms[i]];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new u32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, lst) {\n    var s = dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var pos = 0;\n    if (!lvl || s < 8) {\n        for (var i = 0; i <= s; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e < s) {\n                // write full block\n                pos = wfblk(w, pos, dat.subarray(i, e));\n            }\n            else {\n                // write final block\n                w[i] = lst;\n                pos = wfblk(w, pos, dat.subarray(i, s));\n            }\n        }\n    }\n    else {\n        var opt = deo[lvl - 1];\n        var n = opt >>> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = new u16(32768), head = new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new u32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index  l/lind  waitdx  bitpos\n        var lc_1 = 0, eb = 0, i = 0, li = 0, wi = 0, bs = 0;\n        for (; i < s; ++i) {\n            // hash value\n            // deopt when i > s - 3 - at end, deopt acceptable\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && rem > 423) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = (imod - pimod) & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = (i - dif + j + 32768) & 32767;\n                                    var pti = prev[ti];\n                                    var cd = (ti - pti + 32768) & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += (imod - pimod + 32768) & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one Uint32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        // this is the easiest way to avoid needing to maintain state\n        if (!lst && pos & 7)\n            pos = wfblk(w, pos + 1, et);\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new u32(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && 0xEDB88320) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Alder32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a >>> 8) << 16 | (b & 255) << 8 | (b >>> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : (12 + opt.mem), pre, post, !st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/ /g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return [fnStr, td];\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k] instanceof u8 || v[k] instanceof u16 || v[k] instanceof u32)\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    var _a;\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            _a = wcln(fns[i], fnStr, td_1), fnStr = _a[0], td_1 = _a[1];\n        ch[id] = wcln(fns[m], fnStr, td_1);\n    }\n    var td = mrg({}, ch[id][1]);\n    return wk(ch[id][0] + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, u32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, hMap, max, bits, bits16, shft, slc, inflt, inflateSync, pbf, gu8]; };\nvar bDflt = function () { return [u8, u16, u32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zlv]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get u8\nvar gu8 = function (o) { return o && o.size && new u8(o.size); };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) { return strm.push(ev.data[0], ev.data[1]); };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.push = function (d, f) {\n        if (t)\n            throw 'stream finished';\n        if (!strm.ondata)\n            throw 'no stream handler';\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        throw 'invalid gzip data';\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += d[10] | (d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return ((d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16) | (d[l - 1] << 24)) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + ((o.filename && (o.filename.length + 1)) || 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (fl ? (32 - 2 * fl) : 1);\n};\n// zlib valid\nvar zlv = function (d) {\n    if ((d[0] & 15) != 8 || (d[0] >>> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        throw 'invalid zlib data';\n    if (d[1] & 32)\n        throw 'invalid zlib data: preset dictionaries not supported';\n};\nfunction AsyncCmpStrm(opts, cb) {\n    if (!cb && typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n// zlib footer: -4 to -0 is Adler32\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (!cb && typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, !f), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (this.d)\n            throw 'stream finished';\n        if (!this.ondata)\n            throw 'no stream handler';\n        this.d = final;\n        this.p(chunk, final || false);\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an inflation stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Inflate(cb) {\n        this.s = {};\n        this.p = new u8(0);\n        this.ondata = cb;\n    }\n    Inflate.prototype.e = function (c) {\n        if (this.d)\n            throw 'stream finished';\n        if (!this.ondata)\n            throw 'no stream handler';\n        var l = this.p.length;\n        var n = new u8(l + c.length);\n        n.set(this.p), n.set(c, l), this.p = n;\n    };\n    Inflate.prototype.c = function (final) {\n        this.d = this.s.i = final || false;\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.o, this.s);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous inflation stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncInflate(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, 0, function () {\n            var strm = new Inflate();\n            onmessage = astrm(strm);\n        }, 7);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gu8(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, out) {\n    return inflt(data, out);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        this.c.p(c);\n        this.l += c.length;\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, !f);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a GUNZIP stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Gunzip(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            var s = this.p.length > 3 ? gzs(this.p) : 4;\n            if (s >= this.p.length && !final)\n                return;\n            this.p = this.p.subarray(s), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 8)\n                throw 'invalid gzip stream';\n            this.p = this.p.subarray(0, -8);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous GUNZIP stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncGunzip(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, 0, function () {\n            var strm = new Gunzip();\n            onmessage = astrm(strm);\n        }, 9);\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param out Where to write the data. GZIP already encodes the output size, so providing this doesn't save memory.\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, out) {\n    return inflt(data.subarray(gzs(data), -8), out || new u8(gzl(data)));\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        this.c.p(c);\n        var raw = dopt(c, this.o, this.v && 2, f && 4, !f);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates a Zlib decompression stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Unzlib(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 2 && !final)\n                return;\n            this.p = this.p.subarray(2), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                throw 'invalid zlib stream';\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous Zlib decompression stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncUnzlib(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, 0, function () {\n            var strm = new Unzlib();\n            onmessage = astrm(strm);\n        }, 11);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gu8(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, out) {\n    return inflt((zlv(data), data.subarray(2, -4)), out);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    /**\n     * Creates a decompression stream\n     * @param cb The callback to call whenever data is decompressed\n     */\n    function Decompress(cb) {\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no stream handler';\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                var _this_1 = this;\n                var cb = function () { _this_1.ondata.apply(_this_1, arguments); };\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(cb)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(cb)\n                        : new this.Z(cb);\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    /**\n   * Creates an asynchronous decompression stream\n   * @param cb The callback to call whenever data is decompressed\n   */\n    function AsyncDecompress(cb) {\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, out) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, out)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, out)\n            : unzlibSync(data, out);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k;\n        if (val instanceof u8)\n            t[n] = [val, o];\n        else if (Array.isArray(val))\n            t[n] = [val[0], mrg(o, val[1])];\n        else\n            fltn(val, n + '/', t, o);\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return [r, slc(d, i - 1)];\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no callback';\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    throw 'invalid utf-8 data';\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            throw 'stream finished';\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), ch = _a[0], np = _a[1];\n        if (final) {\n            if (np.length)\n                throw 'invalid utf-8 data';\n            this.p = null;\n        }\n        else\n            this.p = np;\n        this.ondata(ch, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no callback';\n        if (this.d)\n            throw 'stream finished';\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td)\n        return td.decode(dat);\n    else {\n        var _a = dutf8(dat), out = _a[0], ext = _a[1];\n        if (ext.length)\n            throw 'invalid utf-8 data';\n        return out;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                throw 'extra field too long';\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c == null && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        throw 'date not in range 1980-2099';\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >>> 1)), b += 4;\n    if (c != null) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            throw 'no callback - add to ZIP archive before pushing';\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this_1.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this_1 = this;\n        if (this.d & 2)\n            throw 'stream finished';\n        var f = strToU8(file.filename), fl = f.length;\n        var com = file.comment, o = com && strToU8(com);\n        var u = fl != file.filename.length || (o && (com.length != o.length));\n        var hl = fl + exfl(file.extra) + 30;\n        if (fl > 65535)\n            throw 'filename too long';\n        var header = new u8(hl);\n        wzh(header, 0, file, f, u);\n        var chks = [header];\n        var pAll = function () {\n            for (var _i = 0, chks_1 = chks; _i < chks_1.length; _i++) {\n                var chk = chks_1[_i];\n                _this_1.ondata(null, chk, false);\n            }\n            chks = [];\n        };\n        var tr = this.d;\n        this.d = 0;\n        var ind = this.u.length;\n        var uf = mrg(file, {\n            f: f,\n            u: u,\n            o: o,\n            t: function () {\n                if (file.terminate)\n                    file.terminate();\n            },\n            r: function () {\n                pAll();\n                if (tr) {\n                    var nxt = _this_1.u[ind + 1];\n                    if (nxt)\n                        nxt.r();\n                    else\n                        _this_1.d = 1;\n                }\n                tr = 1;\n            }\n        });\n        var cl = 0;\n        file.ondata = function (err, dat, final) {\n            if (err) {\n                _this_1.ondata(err, dat, final);\n                _this_1.terminate();\n            }\n            else {\n                cl += dat.length;\n                chks.push(dat);\n                if (final) {\n                    var dd = new u8(16);\n                    wbytes(dd, 0, 0x8074B50);\n                    wbytes(dd, 4, file.crc);\n                    wbytes(dd, 8, cl);\n                    wbytes(dd, 12, file.size);\n                    chks.push(dd);\n                    uf.c = cl, uf.b = hl + cl + 16, uf.crc = file.crc, uf.size = file.size;\n                    if (tr)\n                        uf.r();\n                    tr = 1;\n                }\n                else if (tr)\n                    pAll();\n            }\n        };\n        this.u.push(uf);\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this_1 = this;\n        if (this.d & 2) {\n            if (this.d & 1)\n                throw 'stream finishing';\n            throw 'stream finished';\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this_1.d & 1))\n                        return;\n                    _this_1.u.splice(-1, 1);\n                    _this_1.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, f.c, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        throw 'no callback';\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cb(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cb(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cb(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl('filename too long', null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            throw 'filename too long';\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this_1 = this;\n        this.i = new Inflate(function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, data, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this_1 = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this_1.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this_1.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this_1 = this;\n        if (!this.onfile)\n            throw 'no callback';\n        if (!this.p)\n            throw 'stream finished';\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_2 = [];\n                        this_1.k.unshift(chks_2);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    throw 'no callback';\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this_1.o[cmp_1];\n                                    if (!ctr)\n                                        throw 'unknown compression type ' + cmp_1;\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_3 = chks_2; _i < chks_3.length; _i++) {\n                                        var dat = chks_3[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this_1.k[0] == chks_2 && _this_1.c)\n                                        _this_1.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                throw 'invalid zip file';\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\n/**\n * Asynchronously decompresses a ZIP archive\n * @param data The raw compressed ZIP file\n * @param cb The callback to call with the decompressed files\n * @returns A function that can be used to immediately terminate the unzipping\n */\nexport function unzip(data, cb) {\n    if (typeof cb != 'function')\n        throw 'no callback';\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cb('invalid zip file', null);\n            return;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (!lft)\n        cb(null, {});\n    var c = lft;\n    var o = b4(data, e + 16);\n    var z = o == 4294967295;\n    if (z) {\n        e = b4(data, e - 12);\n        if (b4(data, e) != 0x6064B50) {\n            cb('invalid zip file', null);\n            return;\n        }\n        c = lft = b4(data, e + 32);\n        o = b4(data, e + 48);\n    }\n    var _loop_3 = function (i) {\n        var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cb(e, null);\n            }\n            else {\n                files[fn] = d;\n                if (!--lft)\n                    cb(null, files);\n            }\n        };\n        if (!c_1)\n            cbl(null, slc(data, b, b + sc));\n        else if (c_1 == 8) {\n            var infl = data.subarray(b, b + sc);\n            if (sc < 320000) {\n                try {\n                    cbl(null, inflateSync(infl, new u8(su)));\n                }\n                catch (e) {\n                    cbl(e, null);\n                }\n            }\n            else\n                term.push(inflate(infl, { size: su }, cbl));\n        }\n        else\n            cbl('unknown compression type ' + c_1, null);\n    };\n    for (var i = 0; i < c; ++i) {\n        _loop_3(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @returns The decompressed files\n */\nexport function unzipSync(data) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            throw 'invalid zip file';\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295;\n    if (z) {\n        e = b4(data, e - 12);\n        if (b4(data, e) != 0x6064B50)\n            throw 'invalid zip file';\n        c = b4(data, e + 32);\n        o = b4(data, e + 48);\n    }\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!c_2)\n            files[fn] = slc(data, b, b + sc);\n        else if (c_2 == 8)\n            files[fn] = inflateSync(data.subarray(b, b + sc), new u8(su));\n        else\n            throw 'unknown compression type ' + c_2;\n    }\n    return files;\n}\n","import {\n\tCurve,\n\tVector3,\n\tVector4\n} from 'three';\nimport * as NURBSUtils from '../curves/NURBSUtils.js';\n\n/**\n * NURBS curve object\n *\n * Derives from Curve, overriding getPoint and getTangent.\n *\n * Implementation is based on (x, y [, z=0 [, w=1]]) control points with w=weight.\n *\n **/\n\nclass NURBSCurve extends Curve {\n\n\tconstructor(\n\t\tdegree,\n\t\tknots /* array of reals */,\n\t\tcontrolPoints /* array of Vector(2|3|4) */,\n\t\tstartKnot /* index in knots */,\n\t\tendKnot /* index in knots */\n\t) {\n\n\t\tsuper();\n\n\t\tthis.degree = degree;\n\t\tthis.knots = knots;\n\t\tthis.controlPoints = [];\n\t\t// Used by periodic NURBS to remove hidden spans\n\t\tthis.startKnot = startKnot || 0;\n\t\tthis.endKnot = endKnot || ( this.knots.length - 1 );\n\n\t\tfor ( let i = 0; i < controlPoints.length; ++ i ) {\n\n\t\t\t// ensure Vector4 for control points\n\t\t\tconst point = controlPoints[ i ];\n\t\t\tthis.controlPoints[ i ] = new Vector4( point.x, point.y, point.z, point.w );\n\n\t\t}\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst u = this.knots[ this.startKnot ] + t * ( this.knots[ this.endKnot ] - this.knots[ this.startKnot ] ); // linear mapping t->u\n\n\t\t// following results in (wx, wy, wz, w) homogeneous point\n\t\tconst hpoint = NURBSUtils.calcBSplinePoint( this.degree, this.knots, this.controlPoints, u );\n\n\t\tif ( hpoint.w !== 1.0 ) {\n\n\t\t\t// project to 3D space: (wx, wy, wz, w) -> (x, y, z, 1)\n\t\t\thpoint.divideScalar( hpoint.w );\n\n\t\t}\n\n\t\treturn point.set( hpoint.x, hpoint.y, hpoint.z );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\tconst tangent = optionalTarget;\n\n\t\tconst u = this.knots[ 0 ] + t * ( this.knots[ this.knots.length - 1 ] - this.knots[ 0 ] );\n\t\tconst ders = NURBSUtils.calcNURBSDerivatives( this.degree, this.knots, this.controlPoints, u, 1 );\n\t\ttangent.copy( ders[ 1 ] ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n}\n\nexport { NURBSCurve };\n","import {\n\tVector3,\n\tVector4\n} from 'three';\n\n/**\n * NURBS utils\n *\n * See NURBSCurve and NURBSSurface.\n **/\n\n\n/**************************************************************\n *\tNURBS Utils\n **************************************************************/\n\n/*\nFinds knot vector span.\n\np : degree\nu : parametric value\nU : knot vector\n\nreturns the span\n*/\nfunction findSpan( p, u, U ) {\n\n\tconst n = U.length - p - 1;\n\n\tif ( u >= U[ n ] ) {\n\n\t\treturn n - 1;\n\n\t}\n\n\tif ( u <= U[ p ] ) {\n\n\t\treturn p;\n\n\t}\n\n\tlet low = p;\n\tlet high = n;\n\tlet mid = Math.floor( ( low + high ) / 2 );\n\n\twhile ( u < U[ mid ] || u >= U[ mid + 1 ] ) {\n\n\t\tif ( u < U[ mid ] ) {\n\n\t\t\thigh = mid;\n\n\t\t} else {\n\n\t\t\tlow = mid;\n\n\t\t}\n\n\t\tmid = Math.floor( ( low + high ) / 2 );\n\n\t}\n\n\treturn mid;\n\n}\n\n\n/*\nCalculate basis functions. See The NURBS Book, page 70, algorithm A2.2\n\nspan : span in which u lies\nu    : parametric point\np    : degree\nU    : knot vector\n\nreturns array[p+1] with basis functions values.\n*/\nfunction calcBasisFunctions( span, u, p, U ) {\n\n\tconst N = [];\n\tconst left = [];\n\tconst right = [];\n\tN[ 0 ] = 1.0;\n\n\tfor ( let j = 1; j <= p; ++ j ) {\n\n\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\tright[ j ] = U[ span + j ] - u;\n\n\t\tlet saved = 0.0;\n\n\t\tfor ( let r = 0; r < j; ++ r ) {\n\n\t\t\tconst rv = right[ r + 1 ];\n\t\t\tconst lv = left[ j - r ];\n\t\t\tconst temp = N[ r ] / ( rv + lv );\n\t\t\tN[ r ] = saved + rv * temp;\n\t\t\tsaved = lv * temp;\n\n\t\t}\n\n\t\tN[ j ] = saved;\n\n\t}\n\n\treturn N;\n\n}\n\n\n/*\nCalculate B-Spline curve points. See The NURBS Book, page 82, algorithm A3.1.\n\np : degree of B-Spline\nU : knot vector\nP : control points (x, y, z, w)\nu : parametric point\n\nreturns point for given u\n*/\nfunction calcBSplinePoint( p, U, P, u ) {\n\n\tconst span = findSpan( p, u, U );\n\tconst N = calcBasisFunctions( span, u, p, U );\n\tconst C = new Vector4( 0, 0, 0, 0 );\n\n\tfor ( let j = 0; j <= p; ++ j ) {\n\n\t\tconst point = P[ span - p + j ];\n\t\tconst Nj = N[ j ];\n\t\tconst wNj = point.w * Nj;\n\t\tC.x += point.x * wNj;\n\t\tC.y += point.y * wNj;\n\t\tC.z += point.z * wNj;\n\t\tC.w += point.w * Nj;\n\n\t}\n\n\treturn C;\n\n}\n\n\n/*\nCalculate basis functions derivatives. See The NURBS Book, page 72, algorithm A2.3.\n\nspan : span in which u lies\nu    : parametric point\np    : degree\nn    : number of derivatives to calculate\nU    : knot vector\n\nreturns array[n+1][p+1] with basis functions derivatives\n*/\nfunction calcBasisFunctionDerivatives( span, u, p, n, U ) {\n\n\tconst zeroArr = [];\n\tfor ( let i = 0; i <= p; ++ i )\n\t\tzeroArr[ i ] = 0.0;\n\n\tconst ders = [];\n\n\tfor ( let i = 0; i <= n; ++ i )\n\t\tders[ i ] = zeroArr.slice( 0 );\n\n\tconst ndu = [];\n\n\tfor ( let i = 0; i <= p; ++ i )\n\t\tndu[ i ] = zeroArr.slice( 0 );\n\n\tndu[ 0 ][ 0 ] = 1.0;\n\n\tconst left = zeroArr.slice( 0 );\n\tconst right = zeroArr.slice( 0 );\n\n\tfor ( let j = 1; j <= p; ++ j ) {\n\n\t\tleft[ j ] = u - U[ span + 1 - j ];\n\t\tright[ j ] = U[ span + j ] - u;\n\n\t\tlet saved = 0.0;\n\n\t\tfor ( let r = 0; r < j; ++ r ) {\n\n\t\t\tconst rv = right[ r + 1 ];\n\t\t\tconst lv = left[ j - r ];\n\t\t\tndu[ j ][ r ] = rv + lv;\n\n\t\t\tconst temp = ndu[ r ][ j - 1 ] / ndu[ j ][ r ];\n\t\t\tndu[ r ][ j ] = saved + rv * temp;\n\t\t\tsaved = lv * temp;\n\n\t\t}\n\n\t\tndu[ j ][ j ] = saved;\n\n\t}\n\n\tfor ( let j = 0; j <= p; ++ j ) {\n\n\t\tders[ 0 ][ j ] = ndu[ j ][ p ];\n\n\t}\n\n\tfor ( let r = 0; r <= p; ++ r ) {\n\n\t\tlet s1 = 0;\n\t\tlet s2 = 1;\n\n\t\tconst a = [];\n\t\tfor ( let i = 0; i <= p; ++ i ) {\n\n\t\t\ta[ i ] = zeroArr.slice( 0 );\n\n\t\t}\n\n\t\ta[ 0 ][ 0 ] = 1.0;\n\n\t\tfor ( let k = 1; k <= n; ++ k ) {\n\n\t\t\tlet d = 0.0;\n\t\t\tconst rk = r - k;\n\t\t\tconst pk = p - k;\n\n\t\t\tif ( r >= k ) {\n\n\t\t\t\ta[ s2 ][ 0 ] = a[ s1 ][ 0 ] / ndu[ pk + 1 ][ rk ];\n\t\t\t\td = a[ s2 ][ 0 ] * ndu[ rk ][ pk ];\n\n\t\t\t}\n\n\t\t\tconst j1 = ( rk >= - 1 ) ? 1 : - rk;\n\t\t\tconst j2 = ( r - 1 <= pk ) ? k - 1 : p - r;\n\n\t\t\tfor ( let j = j1; j <= j2; ++ j ) {\n\n\t\t\t\ta[ s2 ][ j ] = ( a[ s1 ][ j ] - a[ s1 ][ j - 1 ] ) / ndu[ pk + 1 ][ rk + j ];\n\t\t\t\td += a[ s2 ][ j ] * ndu[ rk + j ][ pk ];\n\n\t\t\t}\n\n\t\t\tif ( r <= pk ) {\n\n\t\t\t\ta[ s2 ][ k ] = - a[ s1 ][ k - 1 ] / ndu[ pk + 1 ][ r ];\n\t\t\t\td += a[ s2 ][ k ] * ndu[ r ][ pk ];\n\n\t\t\t}\n\n\t\t\tders[ k ][ r ] = d;\n\n\t\t\tconst j = s1;\n\t\t\ts1 = s2;\n\t\t\ts2 = j;\n\n\t\t}\n\n\t}\n\n\tlet r = p;\n\n\tfor ( let k = 1; k <= n; ++ k ) {\n\n\t\tfor ( let j = 0; j <= p; ++ j ) {\n\n\t\t\tders[ k ][ j ] *= r;\n\n\t\t}\n\n\t\tr *= p - k;\n\n\t}\n\n\treturn ders;\n\n}\n\n\n/*\n\tCalculate derivatives of a B-Spline. See The NURBS Book, page 93, algorithm A3.2.\n\n\tp  : degree\n\tU  : knot vector\n\tP  : control points\n\tu  : Parametric points\n\tnd : number of derivatives\n\n\treturns array[d+1] with derivatives\n\t*/\nfunction calcBSplineDerivatives( p, U, P, u, nd ) {\n\n\tconst du = nd < p ? nd : p;\n\tconst CK = [];\n\tconst span = findSpan( p, u, U );\n\tconst nders = calcBasisFunctionDerivatives( span, u, p, du, U );\n\tconst Pw = [];\n\n\tfor ( let i = 0; i < P.length; ++ i ) {\n\n\t\tconst point = P[ i ].clone();\n\t\tconst w = point.w;\n\n\t\tpoint.x *= w;\n\t\tpoint.y *= w;\n\t\tpoint.z *= w;\n\n\t\tPw[ i ] = point;\n\n\t}\n\n\tfor ( let k = 0; k <= du; ++ k ) {\n\n\t\tconst point = Pw[ span - p ].clone().multiplyScalar( nders[ k ][ 0 ] );\n\n\t\tfor ( let j = 1; j <= p; ++ j ) {\n\n\t\t\tpoint.add( Pw[ span - p + j ].clone().multiplyScalar( nders[ k ][ j ] ) );\n\n\t\t}\n\n\t\tCK[ k ] = point;\n\n\t}\n\n\tfor ( let k = du + 1; k <= nd + 1; ++ k ) {\n\n\t\tCK[ k ] = new Vector4( 0, 0, 0 );\n\n\t}\n\n\treturn CK;\n\n}\n\n\n/*\nCalculate \"K over I\"\n\nreturns k!/(i!(k-i)!)\n*/\nfunction calcKoverI( k, i ) {\n\n\tlet nom = 1;\n\n\tfor ( let j = 2; j <= k; ++ j ) {\n\n\t\tnom *= j;\n\n\t}\n\n\tlet denom = 1;\n\n\tfor ( let j = 2; j <= i; ++ j ) {\n\n\t\tdenom *= j;\n\n\t}\n\n\tfor ( let j = 2; j <= k - i; ++ j ) {\n\n\t\tdenom *= j;\n\n\t}\n\n\treturn nom / denom;\n\n}\n\n\n/*\nCalculate derivatives (0-nd) of rational curve. See The NURBS Book, page 127, algorithm A4.2.\n\nPders : result of function calcBSplineDerivatives\n\nreturns array with derivatives for rational curve.\n*/\nfunction calcRationalCurveDerivatives( Pders ) {\n\n\tconst nd = Pders.length;\n\tconst Aders = [];\n\tconst wders = [];\n\n\tfor ( let i = 0; i < nd; ++ i ) {\n\n\t\tconst point = Pders[ i ];\n\t\tAders[ i ] = new Vector3( point.x, point.y, point.z );\n\t\twders[ i ] = point.w;\n\n\t}\n\n\tconst CK = [];\n\n\tfor ( let k = 0; k < nd; ++ k ) {\n\n\t\tconst v = Aders[ k ].clone();\n\n\t\tfor ( let i = 1; i <= k; ++ i ) {\n\n\t\t\tv.sub( CK[ k - i ].clone().multiplyScalar( calcKoverI( k, i ) * wders[ i ] ) );\n\n\t\t}\n\n\t\tCK[ k ] = v.divideScalar( wders[ 0 ] );\n\n\t}\n\n\treturn CK;\n\n}\n\n\n/*\nCalculate NURBS curve derivatives. See The NURBS Book, page 127, algorithm A4.2.\n\np  : degree\nU  : knot vector\nP  : control points in homogeneous space\nu  : parametric points\nnd : number of derivatives\n\nreturns array with derivatives.\n*/\nfunction calcNURBSDerivatives( p, U, P, u, nd ) {\n\n\tconst Pders = calcBSplineDerivatives( p, U, P, u, nd );\n\treturn calcRationalCurveDerivatives( Pders );\n\n}\n\n\n/*\nCalculate rational B-Spline surface point. See The NURBS Book, page 134, algorithm A4.3.\n\np1, p2 : degrees of B-Spline surface\nU1, U2 : knot vectors\nP      : control points (x, y, z, w)\nu, v   : parametric values\n\nreturns point for given (u, v)\n*/\nfunction calcSurfacePoint( p, q, U, V, P, u, v, target ) {\n\n\tconst uspan = findSpan( p, u, U );\n\tconst vspan = findSpan( q, v, V );\n\tconst Nu = calcBasisFunctions( uspan, u, p, U );\n\tconst Nv = calcBasisFunctions( vspan, v, q, V );\n\tconst temp = [];\n\n\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\ttemp[ l ] = new Vector4( 0, 0, 0, 0 );\n\t\tfor ( let k = 0; k <= p; ++ k ) {\n\n\t\t\tconst point = P[ uspan - p + k ][ vspan - q + l ].clone();\n\t\t\tconst w = point.w;\n\t\t\tpoint.x *= w;\n\t\t\tpoint.y *= w;\n\t\t\tpoint.z *= w;\n\t\t\ttemp[ l ].add( point.multiplyScalar( Nu[ k ] ) );\n\n\t\t}\n\n\t}\n\n\tconst Sw = new Vector4( 0, 0, 0, 0 );\n\tfor ( let l = 0; l <= q; ++ l ) {\n\n\t\tSw.add( temp[ l ].multiplyScalar( Nv[ l ] ) );\n\n\t}\n\n\tSw.divideScalar( Sw.w );\n\ttarget.set( Sw.x, Sw.y, Sw.z );\n\n}\n\n\n\nexport {\n\tfindSpan,\n\tcalcBasisFunctions,\n\tcalcBSplinePoint,\n\tcalcBasisFunctionDerivatives,\n\tcalcBSplineDerivatives,\n\tcalcKoverI,\n\tcalcRationalCurveDerivatives,\n\tcalcNURBSDerivatives,\n\tcalcSurfacePoint,\n};\n"],"names":[],"version":3,"file":"main.566c2d4a.js.map","sourceRoot":"/__parcel_source_root/"}